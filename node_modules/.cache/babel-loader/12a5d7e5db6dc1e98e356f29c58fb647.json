{"ast":null,"code":"import React,{useEffect,useState,useRef}from\"react\";import{MapContainer,useMapEvents,TileLayer,Marker,Popup,Tooltip,Polygon}from'react-leaflet';//import {useSelector,useDispatch} from 'react-redux';\n//import {endPart,showMarkers,incrementDifference} from '../actions/actions';\n//import {haversineDistance}from '../util/drawData.js';\nimport Calendar from'./Calendar';import Status from'./Status';import seats from'../data/seats';import parkings from'../data/parkings';import area from'../data/area';import{seatIcon,freSeatIcon,parkingIcon}from'./Icon';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var transparentOption={color:'red',fillColor:\"none\"};var Content=function Content(){function handleMouseOut(e){e.target.closePopup();}function handleMouseOver(e){e.target.openPopup();}return/*#__PURE__*/_jsxs(_Fragment,{children:[seats.map(function(seat){return/*#__PURE__*/_jsxs(Marker,{position:[seat.coordinates[1],seat.coordinates[0]],onMouseOver:function onMouseOver(e){return handleMouseOver(e);},onMouseOut:function onMouseOut(e){return handleMouseOut(e);}//icon={freSeatIcon}\n,children:[/*#__PURE__*/_jsx(Popup,{style:{height:\"400px\"},children:/*#__PURE__*/_jsx(Calendar,{seat:seat.id})},seat.coordinates[1]),/*#__PURE__*/_jsxs(Tooltip,{children:[\" \",/*#__PURE__*/_jsx(Status,{seat:seat.id})]},seat.coordinates[0])]},seat.id);}),parkings.map(function(parking){return/*#__PURE__*/_jsxs(Marker,{position:[parking.coordinates[1],parking.coordinates[0]],icon:parkingIcon,children:[/*#__PURE__*/_jsx(Popup,{style:{height:\"400px\"},children:/*#__PURE__*/_jsx(Calendar,{})},parking.coordinates[1]),/*#__PURE__*/_jsx(Tooltip,{children:\" This is a park\"},parking.coordinates[0])]},parking.id);}),/*#__PURE__*/_jsx(Polygon,{pathOptions:transparentOption,positions:area})]});};var Map=function Map(){/*const [dimensions,setDimensions]=useState({width:\"1833px\",height:\"700px\"});\n    /const updateDimensions =()=>{\n        const width = window.innerWidth ;\n        setDimensions({...dimensions,width:width})\n    }\n    useEffect(()=>{\n        const width = window.innerWidth ;\n        setDimensions({...dimensions,width:width});\n    },[mapRef]);\n    */return/*#__PURE__*/_jsxs(MapContainer,{center:[24.790813855392256,46.741996280426456],zoom:window.innerWidth<600?18:20,scrollWheelZoom:false,style:{height:900},children:[/*#__PURE__*/_jsx(TileLayer,{attribution:\"Tiles \\xA9 Esri \\u2014 Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community\",url:\"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}'\"}),/*#__PURE__*/_jsx(Content,{})]});};export default Map;","map":{"version":3,"sources":["/home/abdel/Desktop/parking-reservation-front-react/src/components/Map.js"],"names":["React","useEffect","useState","useRef","MapContainer","useMapEvents","TileLayer","Marker","Popup","Tooltip","Polygon","Calendar","Status","seats","parkings","area","seatIcon","freSeatIcon","parkingIcon","transparentOption","color","fillColor","Content","handleMouseOut","e","target","closePopup","handleMouseOver","openPopup","map","seat","coordinates","height","id","parking","Map","window","innerWidth"],"mappings":"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","sourcesContent":["import  React,{ useEffect,useState,useRef }from \"react\";\nimport { MapContainer, useMapEvents,TileLayer, Marker, Popup ,Tooltip,Polygon} from 'react-leaflet';\n//import {useSelector,useDispatch} from 'react-redux';\n//import {endPart,showMarkers,incrementDifference} from '../actions/actions';\n//import {haversineDistance}from '../util/drawData.js';\nimport Calendar from './Calendar';\nimport Status from './Status';\nimport seats from '../data/seats';\nimport parkings from '../data/parkings';\nimport area from '../data/area';\nimport {seatIcon,freSeatIcon,parkingIcon} from './Icon'\nconst transparentOption = { color: 'red',fillColor:\"none\" }\n\nconst Content =()=>{\n    function handleMouseOut(e){\n        e.target.closePopup();\n    }\n    function handleMouseOver(e){\n        e.target.openPopup();\n    }\n    return(\n        <>\n        {seats.map(seat=>{\n        return <Marker \n        position={[seat.coordinates[1],seat.coordinates[0]]} \n        onMouseOver={(e)=>handleMouseOver(e)}\n        onMouseOut={(e)=>handleMouseOut(e)}\n          //icon={freSeatIcon}\n          key={seat.id}\n        >\n            <Popup style={{ height:\"400px\"}}  key={seat.coordinates[1]}>\n                <Calendar seat={seat.id}/>\n            </Popup>\n            <Tooltip  key={seat.coordinates[0]}> <Status seat={seat.id}/></Tooltip>\n\n        </Marker>\n    })    \n    }\n    {parkings.map(parking=>{\n        return <Marker position={[parking.coordinates[1],parking.coordinates[0]]} icon={parkingIcon} key={parking.id}>\n            <Popup style={{ height:\"400px\"}}  key={parking.coordinates[1]}>\n                <Calendar/>\n            </Popup>\n            <Tooltip  key={parking.coordinates[0]}> This is a park</Tooltip>\n        </Marker>\n    })    \n    }\n    <Polygon pathOptions={transparentOption} positions={area} />\n    </>)\n}\nconst Map=()=>{\n\n    /*const [dimensions,setDimensions]=useState({width:\"1833px\",height:\"700px\"});\n    /const updateDimensions =()=>{\n        const width = window.innerWidth ;\n        setDimensions({...dimensions,width:width})\n    }\n    useEffect(()=>{\n        const width = window.innerWidth ;\n        setDimensions({...dimensions,width:width});\n    },[mapRef]);\n    */\n    return(\n        <MapContainer \n        center={[24.790813855392256, 46.741996280426456 ]}\n         zoom={window.innerWidth<600?18:20 } \n         scrollWheelZoom={false} \n         style={{height:900}}\n        > \n            <TileLayer\n                attribution='Tiles &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community'\n                url=\"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}'\"\n            />\n        <Content/>\n\n        </MapContainer>\n\n    );\n}\nexport default Map;"]},"metadata":{},"sourceType":"module"}