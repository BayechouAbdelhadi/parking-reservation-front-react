{"ast":null,"code":"var _jsxFileName = \"/home/abdel/Desktop/parking-reservation-front-react/src/components/Map.js\";\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { MapContainer, useMapEvents, TileLayer, Marker, Popup, Tooltip, Polygon } from 'react-leaflet'; //import {useSelector,useDispatch} from 'react-redux';\n//import {endPart,showMarkers,incrementDifference} from '../actions/actions';\n//import {haversineDistance}from '../util/drawData.js';\n\nimport Calendar from './Calendar';\nimport Status from './Status';\nimport seats from '../data/seats';\nimport parkings from '../data/parkings';\nimport area from '../data/area';\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    textAlign: 'center',\n    justifyContent: 'center',\n    //backgroundColor:'antiquewhite',\n    padding: '10px',\n    // border :'solid brown',\n    //borderRadius:'8%' ,\n    height: 200,\n    width: 200\n  },\n  progress: {\n    width: '105px',\n    height: '25px',\n    margin: '0 auto',\n    border: 'double'\n  },\n  bar: {\n    width: '1%',\n    height: '30px',\n    backgroundColor: 'green'\n  },\n  text: {\n    color: \"white\",\n    fontSize: 12,\n    fontWeight: 'bold'\n  }\n}));\nimport { seatIcon, freSeatIcon, parkingIcon } from './Icon';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst transparentOption = {\n  color: 'red',\n  fillColor: \"none\"\n};\n\nconst Content = () => {\n  function handleMouseOut(e) {\n    e.target.closePopup();\n  }\n\n  function handleMouseOver(e) {\n    e.target.openPopup();\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [seats.map(seat => {\n      return /*#__PURE__*/_jsxDEV(Marker, {\n        position: [seat.coordinates[1], seat.coordinates[0]],\n        onMouseOver: e => handleMouseOver(e),\n        onMouseOut: e => handleMouseOut(e) //icon={freSeatIcon}\n        ,\n        children: [/*#__PURE__*/_jsxDEV(Popup, {\n          style: {\n            height: \"400px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Calendar, {\n            seat: seat.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }, this)\n        }, seat.coordinates[1], false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          className: ffff,\n          children: [\" \", /*#__PURE__*/_jsxDEV(Status, {\n            seat: seat.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 66\n          }, this)]\n        }, seat.coordinates[0], true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)]\n      }, seat.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 16\n      }, this);\n    }), parkings.map(parking => {\n      return /*#__PURE__*/_jsxDEV(Marker, {\n        position: [parking.coordinates[1], parking.coordinates[0]],\n        icon: parkingIcon,\n        children: [/*#__PURE__*/_jsxDEV(Popup, {\n          style: {\n            height: \"400px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Calendar, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }, this)\n        }, parking.coordinates[1], false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          children: \" This is a park\"\n        }, parking.coordinates[0], false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this)]\n      }, parking.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 16\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(Polygon, {\n      pathOptions: transparentOption,\n      positions: area\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_c = Content;\n\nconst Map = () => {\n  /*const [dimensions,setDimensions]=useState({width:\"1833px\",height:\"700px\"});\n  /const updateDimensions =()=>{\n      const width = window.innerWidth ;\n      setDimensions({...dimensions,width:width})\n  }\n  useEffect(()=>{\n      const width = window.innerWidth ;\n      setDimensions({...dimensions,width:width});\n  },[mapRef]);\n  */\n  return /*#__PURE__*/_jsxDEV(MapContainer, {\n    center: [24.790813855392256, 46.741996280426456],\n    zoom: window.innerWidth < 600 ? 18 : 20,\n    scrollWheelZoom: false,\n    style: {\n      height: 900\n    },\n    children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n      attribution: \"Tiles \\xA9 Esri \\u2014 Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community\",\n      url: \"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}'\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Content, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = Map;\nexport default Map;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Content\");\n$RefreshReg$(_c2, \"Map\");","map":{"version":3,"sources":["/home/abdel/Desktop/parking-reservation-front-react/src/components/Map.js"],"names":["React","useEffect","useState","useRef","MapContainer","useMapEvents","TileLayer","Marker","Popup","Tooltip","Polygon","Calendar","Status","seats","parkings","area","makeStyles","useStyles","theme","root","textAlign","justifyContent","padding","height","width","progress","margin","border","bar","backgroundColor","text","color","fontSize","fontWeight","seatIcon","freSeatIcon","parkingIcon","transparentOption","fillColor","Content","handleMouseOut","e","target","closePopup","handleMouseOver","openPopup","map","seat","coordinates","id","ffff","parking","Map","window","innerWidth"],"mappings":"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","sourcesContent":["import  React,{ useEffect,useState,useRef }from \"react\";\nimport { MapContainer, useMapEvents,TileLayer, Marker, Popup ,Tooltip,Polygon} from 'react-leaflet';\n//import {useSelector,useDispatch} from 'react-redux';\n//import {endPart,showMarkers,incrementDifference} from '../actions/actions';\n//import {haversineDistance}from '../util/drawData.js';\nimport Calendar from './Calendar';\nimport Status from './Status';\nimport seats from '../data/seats';\nimport parkings from '../data/parkings';\nimport area from '../data/area';\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles((theme) => ({\n    root:{\n        textAlign:'center',\n        justifyContent:'center',\n        //backgroundColor:'antiquewhite',\n        padding:'10px',\n       // border :'solid brown',\n        //borderRadius:'8%' ,\n        height:200,\n        width:200\n    },\n    progress: {\n        width: '105px',\n        height: '25px',\n        margin:'0 auto',\n        border:'double',\n    },\n    bar: {\n        width: '1%',\n        height: '30px',\n        backgroundColor: 'green',\n      },\n      text:{\n          color:\"white\",\n          fontSize:12,\n          fontWeight:'bold'   \n      }\n  }));\n  \nimport {seatIcon,freSeatIcon,parkingIcon} from './Icon'\nconst transparentOption = { color: 'red',fillColor:\"none\" }\n\nconst Content =()=>{\n    function handleMouseOut(e){\n        e.target.closePopup();\n    }\n    function handleMouseOver(e){\n        e.target.openPopup();\n    }\n    return(\n        <>\n        {seats.map(seat=>{\n        return <Marker \n        position={[seat.coordinates[1],seat.coordinates[0]]} \n        onMouseOver={(e)=>handleMouseOver(e)}\n        onMouseOut={(e)=>handleMouseOut(e)}\n          //icon={freSeatIcon}\n          key={seat.id}\n        >\n            <Popup style={{ height:\"400px\"}}  key={seat.coordinates[1]}>\n                <Calendar seat={seat.id}/>\n            </Popup>\n            <Tooltip className={ffff} key={seat.coordinates[0]}> <Status seat={seat.id}/></Tooltip>\n\n        </Marker>\n    })    \n    }\n    {parkings.map(parking=>{\n        return <Marker position={[parking.coordinates[1],parking.coordinates[0]]} icon={parkingIcon} key={parking.id}>\n            <Popup style={{ height:\"400px\"}}  key={parking.coordinates[1]}>\n                <Calendar/>\n            </Popup>\n            <Tooltip  key={parking.coordinates[0]}> This is a park</Tooltip>\n        </Marker>\n    })    \n    }\n    <Polygon pathOptions={transparentOption} positions={area} />\n    </>)\n}\nconst Map=()=>{\n\n    /*const [dimensions,setDimensions]=useState({width:\"1833px\",height:\"700px\"});\n    /const updateDimensions =()=>{\n        const width = window.innerWidth ;\n        setDimensions({...dimensions,width:width})\n    }\n    useEffect(()=>{\n        const width = window.innerWidth ;\n        setDimensions({...dimensions,width:width});\n    },[mapRef]);\n    */\n    return(\n        <MapContainer \n        center={[24.790813855392256, 46.741996280426456 ]}\n         zoom={window.innerWidth<600?18:20 } \n         scrollWheelZoom={false} \n         style={{height:900}}\n        > \n            <TileLayer\n                attribution='Tiles &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community'\n                url=\"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}'\"\n            />\n        <Content/>\n\n        </MapContainer>\n\n    );\n}\nexport default Map;"]},"metadata":{},"sourceType":"module"}