{"ast":null,"code":"var _jsxFileName = \"/home/abdel/Desktop/parking-reservation-front-react/src/components/ParkingCalendar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\nimport { isWithinInterval } from \"date-fns\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction isWithinRange(date, range) {\n  return isWithinInterval(date, {\n    start: range[0],\n    end: range[1]\n  });\n}\n\nfunction isWithinRanges(date, ranges) {\n  return ranges.some(range => isWithinRange(date, range));\n}\n\nconst disabledRanges = [[new Date(\"2021-4-1\"), new Date(\"2021-5-1\")], [new Date(\"2021-5-1\"), new Date(\"2021-6-1\")]];\n\nconst ParkingCalendar = () => {\n  _s();\n\n  const [dateValue, setDateValue] = useState(new Date());\n\n  function tileDisabled({\n    date,\n    view\n  }) {\n    if (view === 'month') {\n      return isWithinRanges(date, disabledRanges);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Calendar, {\n      onChange: setDateValue,\n      tileDisabled: tileDisabled,\n      minDate: new Date(Date.now()),\n      value: dateValue,\n      view: \"month\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ParkingCalendar, \"bk01694yyEWcXX3lssuxMTbEuwE=\");\n\n_c = ParkingCalendar;\nexport default ParkingCalendar;\n\nvar _c;\n\n$RefreshReg$(_c, \"ParkingCalendar\");","map":{"version":3,"sources":["/home/abdel/Desktop/parking-reservation-front-react/src/components/ParkingCalendar.js"],"names":["React","useState","Calendar","isWithinInterval","isWithinRange","date","range","start","end","isWithinRanges","ranges","some","disabledRanges","Date","ParkingCalendar","dateValue","setDateValue","tileDisabled","view","now"],"mappings":";;;AAAA,OAAOA,KAAP,IAAiBC,QAAjB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAO,kCAAP;AACA,SAASC,gBAAT,QAAiC,UAAjC;;;AAEA,SAASC,aAAT,CAAuBC,IAAvB,EAA6BC,KAA7B,EAAoC;AAChC,SAAOH,gBAAgB,CAACE,IAAD,EAAO;AAAEE,IAAAA,KAAK,EAAED,KAAK,CAAC,CAAD,CAAd;AAAmBE,IAAAA,GAAG,EAAEF,KAAK,CAAC,CAAD;AAA7B,GAAP,CAAvB;AACH;;AACD,SAASG,cAAT,CAAwBJ,IAAxB,EAA8BK,MAA9B,EAAsC;AAClC,SAAOA,MAAM,CAACC,IAAP,CAAYL,KAAK,IAAIF,aAAa,CAACC,IAAD,EAAOC,KAAP,CAAlC,CAAP;AACH;;AAED,MAAMM,cAAc,GAAG,CACnB,CACI,IAAIC,IAAJ,CAAS,UAAT,CADJ,EAEI,IAAIA,IAAJ,CAAS,UAAT,CAFJ,CADmB,EAKnB,CACI,IAAIA,IAAJ,CAAS,UAAT,CADJ,EAEI,IAAIA,IAAJ,CAAS,UAAT,CAFJ,CALmB,CAAvB;;AAUA,MAAOC,eAAe,GAAC,MAAI;AAAA;;AACvB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bf,QAAQ,CAAC,IAAIY,IAAJ,EAAD,CAA1C;;AAEA,WAASI,YAAT,CAAsB;AAAEZ,IAAAA,IAAF;AAAQa,IAAAA;AAAR,GAAtB,EAAsC;AAClC,QAAIA,IAAI,KAAK,OAAb,EAAsB;AACpB,aAAOT,cAAc,CAACJ,IAAD,EAAOO,cAAP,CAArB;AACD;AACJ;;AAED,sBACI;AAAA,2BACI,QAAC,QAAD;AACI,MAAA,QAAQ,EAAEI,YADd;AAEI,MAAA,YAAY,EAAEC,YAFlB;AAGI,MAAA,OAAO,EAAE,IAAIJ,IAAJ,CAAUA,IAAI,CAACM,GAAL,EAAV,CAHb;AAII,MAAA,KAAK,EAAEJ,SAJX;AAKI,MAAA,IAAI,EAAC;AALT;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CApBD;;GAAOD,e;;KAAAA,e;AAqBP,eAAeA,eAAf","sourcesContent":["import React , { useState} from \"react\";\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\nimport { isWithinInterval } from \"date-fns\";\n\nfunction isWithinRange(date, range) {\n    return isWithinInterval(date, { start: range[0], end: range[1] });\n}\nfunction isWithinRanges(date, ranges) {\n    return ranges.some(range => isWithinRange(date, range));\n}\n\nconst disabledRanges = [\n    [\n        new Date(\"2021-4-1\"),\n        new Date(\"2021-5-1\"),\n    ],\n    [\n        new Date(\"2021-5-1\"),\n        new Date(\"2021-6-1\"),\n    ],\n  ];\nconst  ParkingCalendar=()=>{\n    const [dateValue, setDateValue] = useState(new Date());\n\n    function tileDisabled({ date, view }) {\n        if (view === 'month') {\n          return isWithinRanges(date, disabledRanges);\n        }\n    }\n\n    return(\n        <div>\n            <Calendar\n                onChange={setDateValue}\n                tileDisabled={tileDisabled}\n                minDate={new Date((Date.now()))}\n                value={dateValue}\n                view=\"month\"\n            ></Calendar>\n        </div>\n    )\n}\nexport default ParkingCalendar;"]},"metadata":{},"sourceType":"module"}