{"ast":null,"code":"var _jsxFileName = \"/home/abdel/Desktop/parking-react-client/src/components/Calendar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Box from '@material-ui/core/Box';\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\nimport SlotTime from './SlotTime';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst popupContent = {\n  textAlign: \"center\",\n  height: \"500px\",\n  width: \"400\",\n  marginTop: \"30px\"\n};\n\nconst Calendar1 = () => {\n  _s();\n\n  const [dateValue, setDateValue] = useState(new Date());\n  const [dateSelected, setDateSelected] = useState(false);\n\n  function onChange1(e) {\n    setDateValue(new Date(e));\n    setDateSelected(true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: popupContent,\n    children: dateSelected ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Pick a time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SlotTime, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Pick a date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Calendar, {\n        onChange: e => onChange1(e),\n        value: dateValue,\n        minDate: new Date(Date.now())\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 4\n  }, this);\n};\n\n_s(Calendar1, \"TH3Hr88k6o3Zhwx9nejbA3lXeU8=\");\n\n_c = Calendar1;\nexport default Calendar1;\n\nvar _c;\n\n$RefreshReg$(_c, \"Calendar1\");","map":{"version":3,"sources":["/home/abdel/Desktop/parking-react-client/src/components/Calendar.js"],"names":["React","useState","useEffect","Box","Calendar","SlotTime","popupContent","textAlign","height","width","marginTop","Calendar1","dateValue","setDateValue","Date","dateSelected","setDateSelected","onChange1","e","now"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,OAAOC,GAAP,MAAiB,uBAAjB;AAEA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAO,kCAAP;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,SAAS,EAAE,QADQ;AAEnBC,EAAAA,MAAM,EAAE,OAFW;AAGnBC,EAAAA,KAAK,EAAC,KAHa;AAInBC,EAAAA,SAAS,EAAE;AAJQ,CAArB;;AAMA,MAAMC,SAAS,GAAC,MAAI;AAAA;;AAClB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAC,IAAIa,IAAJ,EAAD,CAA1C;AACA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCf,QAAQ,CAAC,KAAD,CAAhD;;AACA,WAASgB,SAAT,CAAmBC,CAAnB,EAAqB;AACnBL,IAAAA,YAAY,CAAC,IAAIC,IAAJ,CAASI,CAAT,CAAD,CAAZ;AACAF,IAAAA,eAAe,CAAC,IAAD,CAAf;AACD;;AACD,sBACC;AAAM,IAAA,KAAK,EAAEV,YAAb;AAAA,cACGS,YAAY,gBACX;AAAA,8BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,eAEC,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,cAFD;AAAA,oBADW,gBAMX;AAAA,8BACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADC,eAED,QAAC,QAAD;AACE,QAAA,QAAQ,EAAGG,CAAD,IAAKD,SAAS,CAACC,CAAD,CAD1B;AAEE,QAAA,KAAK,EAAEN,SAFT;AAGE,QAAA,OAAO,EAAE,IAAIE,IAAJ,CAAUA,IAAI,CAACK,GAAL,EAAV;AAHX;AAAA;AAAA;AAAA;AAAA,cAFC;AAAA;AAPJ;AAAA;AAAA;AAAA;AAAA,UADD;AAmBD,CA1BD;;GAAMR,S;;KAAAA,S;AA2BN,eAAeA,SAAf","sourcesContent":["import React, { useState,useEffect } from 'react';\nimport Box  from '@material-ui/core/Box';\n\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\nimport SlotTime from './SlotTime';\n\nconst popupContent = {\n  textAlign: \"center\",\n  height: \"500px\",\n  width:\"400\",\n  marginTop: \"30px\"\n};\nconst Calendar1=()=>{\n  const [dateValue, setDateValue] = useState(new Date());\n  const [dateSelected, setDateSelected] = useState(false);\n  function onChange1(e){\n    setDateValue(new Date(e));\n    setDateSelected(true);\n  }\n  return (\n   <div  style={popupContent}>\n     {dateSelected ? \n      (<>\n        <p>Pick a time</p>\n        <SlotTime/>\n      </>\n      ):\n      (<>\n      <p>Pick a date</p>\n      <Calendar\n        onChange={(e)=>onChange1(e)}\n        value={dateValue}\n        minDate={new Date((Date.now()))}\n      />\n      </>\n      )}\n    </div>\n  );\n}\nexport default Calendar1;"]},"metadata":{},"sourceType":"module"}