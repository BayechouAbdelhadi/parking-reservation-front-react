{"ast":null,"code":"import axios from \"axios\";\nimport { GET_ERRORS, SET_CURRENT_USER, SET_PARTS } from \"./types\";\nimport setJWTToken from \"../securityUtils/setJWTToken\";\nimport jwt_decode from \"jwt-decode\";\nimport authHeader from \"../securityUtils/authorisationHeader\";\nexport const createNewUser = (newUser, history) => async (dispatch) => {\n  await axios.post(\"/api/users/register\", newUser).then(response => {\n    history.push(\"/\");\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  }).catch(error => {\n    console.log(error);\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.response.data\n    });\n  });\n};\nexport const login = LoginRequest => async dispatch => {\n  try {\n    // post => Login Request\n    const res = await axios.post(\"/api/users/login\", LoginRequest); // extract token from res.data\n\n    const {\n      token\n    } = res.data; // store the token in the localStorage\n\n    localStorage.setItem(\"jwtToken\", token); // set our token in header ***\n\n    setJWTToken(token); // decode token on React\n\n    const decoded = jwt_decode(token); // dispatch to our securityReducer\n\n    dispatch({\n      type: SET_CURRENT_USER,\n      payload: decoded\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\nexport const logout = () => dispatch => {\n  localStorage.removeItem(\"jwtToken\");\n  setJWTToken(false);\n  dispatch({\n    type: SET_CURRENT_USER,\n    payload: {}\n  });\n};\n/*\nexport const saveScore = score => async dispatch => {\n    // post => Login Request\n    await axios(\n    {\n      url:'/api/parts',\n      method:'post',\n      data: score\n    }\n    ).catch(err=>\n    {\n      dispatch(\n        {\n          type: GET_ERRORS,\n          payload: err.response.data\n        });\n      \n    });\n}\n\nexport const findParts = () => async dispatch => {\n     await axios.get(\"/api/parts\",{\"Authorisation\":authHeader})\n    .then(response=>{\n      const parts = response.data;\n      dispatch({\n      type:SET_PARTS ,\n      payload: parts \n      })\n    })\n    .catch(error=>{\n      dispatch(\n        {\n          type: GET_ERRORS,\n          payload: error.response.data\n        });\n    });\n    \n  }\n  */","map":{"version":3,"sources":["/home/abdel/Desktop/parking-reservation-front-react/src/actions/securityActions.js"],"names":["axios","GET_ERRORS","SET_CURRENT_USER","SET_PARTS","setJWTToken","jwt_decode","authHeader","createNewUser","newUser","history","dispatch","post","then","response","push","type","payload","catch","error","console","log","data","login","LoginRequest","res","token","localStorage","setItem","decoded","err","logout","removeItem"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,gBAArB,EAAuCC,SAAvC,QAAuD,SAAvD;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,UAAP,MAAuB,sCAAvB;AAEA,OAAO,MAAMC,aAAa,GAAG,CAACC,OAAD,EAAUC,OAAV,KAAsB,OAAMC,QAAN,KACnD;AAEI,QAAMV,KAAK,CAACW,IAAN,CAAW,qBAAX,EAAkCH,OAAlC,EACLI,IADK,CACAC,QAAQ,IAAE;AACdJ,IAAAA,OAAO,CAACK,IAAR,CAAa,GAAb;AACAJ,IAAAA,QAAQ,CACR;AACEK,MAAAA,IAAI,EAAEd,UADR;AAEEe,MAAAA,OAAO,EAAE;AAFX,KADQ,CAAR;AAKD,GARK,EAQHC,KARG,CAQGC,KAAK,IAAE;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAR,IAAAA,QAAQ,CACR;AACEK,MAAAA,IAAI,EAAEd,UADR;AAEEe,MAAAA,OAAO,EAAEE,KAAK,CAACL,QAAN,CAAeQ;AAF1B,KADQ,CAAR;AAKD,GAfK,CAAN;AAgBH,CAnBM;AAqBP,OAAO,MAAMC,KAAK,GAAGC,YAAY,IAAI,MAAMb,QAAN,IAAkB;AACrD,MAAI;AACF;AACA,UAAMc,GAAG,GAAG,MAAMxB,KAAK,CAACW,IAAN,CAAW,kBAAX,EAA+BY,YAA/B,CAAlB,CAFE,CAGF;;AACA,UAAM;AAAEE,MAAAA;AAAF,QAAYD,GAAG,CAACH,IAAtB,CAJE,CAKF;;AACAK,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCF,KAAjC,EANE,CAOF;;AACArB,IAAAA,WAAW,CAACqB,KAAD,CAAX,CARE,CASF;;AACA,UAAMG,OAAO,GAAGvB,UAAU,CAACoB,KAAD,CAA1B,CAVE,CAWF;;AACAf,IAAAA,QAAQ,CAAC;AACPK,MAAAA,IAAI,EAACb,gBADE;AAEPc,MAAAA,OAAO,EAAEY;AAFF,KAAD,CAAR;AAID,GAhBD,CAgBE,OAAOC,GAAP,EACF;AACEnB,IAAAA,QAAQ,CACR;AACEK,MAAAA,IAAI,EAAEd,UADR;AAEEe,MAAAA,OAAO,EAAEa,GAAG,CAAChB,QAAJ,CAAaQ;AAFxB,KADQ,CAAR;AAKD;AACF,CAzBM;AA2BP,OAAO,MAAMS,MAAM,GAAG,MAAMpB,QAAQ,IAAI;AACtCgB,EAAAA,YAAY,CAACK,UAAb,CAAwB,UAAxB;AACA3B,EAAAA,WAAW,CAAC,KAAD,CAAX;AACAM,EAAAA,QAAQ,CAAC;AACPK,IAAAA,IAAI,EAACb,gBADE;AAEPc,IAAAA,OAAO,EAAE;AAFF,GAAD,CAAR;AAID,CAPM;AAQP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import axios from \"axios\";\nimport { GET_ERRORS, SET_CURRENT_USER ,SET_PARTS} from \"./types\";\nimport setJWTToken from \"../securityUtils/setJWTToken\";\nimport jwt_decode from \"jwt-decode\";\nimport authHeader from \"../securityUtils/authorisationHeader\"\n\nexport const createNewUser = (newUser, history) => async dispatch => \n{\n  \n    await axios.post(\"/api/users/register\", newUser)\n    .then(response=>{\n      history.push(\"/\");\n      dispatch(\n      {\n        type: GET_ERRORS,\n        payload: {}\n      });\n    }).catch(error=>{\n      console.log(error);\n      dispatch(\n      {\n        type: GET_ERRORS,\n        payload: error.response.data\n      });\n    });\n};\n\nexport const login = LoginRequest => async dispatch => {\n  try {\n    // post => Login Request\n    const res = await axios.post(\"/api/users/login\", LoginRequest);\n    // extract token from res.data\n    const { token } = res.data;\n    // store the token in the localStorage\n    localStorage.setItem(\"jwtToken\", token);\n    // set our token in header ***\n    setJWTToken(token);\n    // decode token on React\n    const decoded = jwt_decode(token);\n    // dispatch to our securityReducer\n    dispatch({\n      type:SET_CURRENT_USER ,\n      payload: decoded\n    });\n  } catch (err) \n  {\n    dispatch(\n    {\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const logout = () => dispatch => {\n  localStorage.removeItem(\"jwtToken\");\n  setJWTToken(false);\n  dispatch({\n    type:SET_CURRENT_USER ,\n    payload: {}\n  });\n};\n/*\nexport const saveScore = score => async dispatch => {\n    // post => Login Request\n    await axios(\n    {\n      url:'/api/parts',\n      method:'post',\n      data: score\n    }\n    ).catch(err=>\n    {\n      dispatch(\n        {\n          type: GET_ERRORS,\n          payload: err.response.data\n        });\n      \n    });\n}\n\nexport const findParts = () => async dispatch => {\n     await axios.get(\"/api/parts\",{\"Authorisation\":authHeader})\n    .then(response=>{\n      const parts = response.data;\n      dispatch({\n      type:SET_PARTS ,\n      payload: parts \n      })\n    })\n    .catch(error=>{\n      dispatch(\n        {\n          type: GET_ERRORS,\n          payload: error.response.data\n        });\n    });\n    \n  }\n  */"]},"metadata":{},"sourceType":"module"}