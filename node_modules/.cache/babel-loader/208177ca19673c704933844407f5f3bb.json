{"ast":null,"code":"import React,{useEffect,useState}from\"react\";import{MapContainer,useMapEvents,TileLayer,Marker,Popup,Tooltip,Polygon}from'react-leaflet';//import {useSelector,useDispatch} from 'react-redux';\n//import {endPart,showMarkers,incrementDifference} from '../actions/actions';\n//import {haversineDistance}from '../util/drawData.js';\nimport Calendar from'./Calendar';import Status from'./Status';import seats from'../data/seats';import parkings from'../data/parkings';import area from'../data/area';import{seatIcon,freSeatIcon,parkingIcon}from'./Icon';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var transparentOption={color:'red',fillColor:\"none\"};var Map=function Map(){function handleMouseOut(e){e.target.closePopup();}function handleMouseOver(e){e.target.openPopup();}return/*#__PURE__*/_jsxs(MapContainer,{center:[24.791658318888238,46.74198403820229],zoom:20,scrollWheelZoom:false,style:{width:'1833px',height:'700px'},children:[/*#__PURE__*/_jsx(TileLayer,{attribution:\"Tiles \\xA9 Esri \\u2014 Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community\",url:\"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}'\"}),seats.map(function(seat){return/*#__PURE__*/_jsxs(Marker,{position:[seat.coordinates[1],seat.coordinates[0]],onMouseOver:function onMouseOver(e){return handleMouseOver(e);},onMouseOut:function onMouseOut(e){return handleMouseOut(e);},icon:freSeatIcon,children:[/*#__PURE__*/_jsx(Popup,{style:{height:\"400px\"},children:/*#__PURE__*/_jsx(Calendar,{})}),/*#__PURE__*/_jsxs(Tooltip,{children:[\" \",/*#__PURE__*/_jsx(Status,{})]})]});}),parkings.map(function(parking){return/*#__PURE__*/_jsxs(Marker,{position:[parking.coordinates[1],parking.coordinates[0]],icon:parkingIcon,children:[/*#__PURE__*/_jsx(Popup,{style:{height:\"400px\"},children:/*#__PURE__*/_jsx(Calendar,{})}),/*#__PURE__*/_jsx(Tooltip,{children:\" This is a park\"})]});}),/*#__PURE__*/_jsx(Polygon,{pathOptions:transparentOption,positions:area})]});};export default Map;","map":{"version":3,"sources":["/home/abdel/Desktop/parking-reservation-front-react/src/components/Map.js"],"names":["React","useEffect","useState","MapContainer","useMapEvents","TileLayer","Marker","Popup","Tooltip","Polygon","Calendar","Status","seats","parkings","area","seatIcon","freSeatIcon","parkingIcon","transparentOption","color","fillColor","Map","handleMouseOut","e","target","closePopup","handleMouseOver","openPopup","width","height","map","seat","coordinates","parking"],"mappings":"AAAA,MAAQA,CAAAA,KAAR,EAAgBC,SAAhB,CAA0BC,QAA1B,KAAyC,OAAzC,CACA,OAASC,YAAT,CAAuBC,YAAvB,CAAoCC,SAApC,CAA+CC,MAA/C,CAAuDC,KAAvD,CAA8DC,OAA9D,CAAsEC,OAAtE,KAAoF,eAApF,CACA;AACA;AACA;AACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CACA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,CACA,MAAOC,CAAAA,KAAP,KAAkB,eAAlB,CACA,MAAOC,CAAAA,QAAP,KAAqB,kBAArB,CACA,MAAOC,CAAAA,IAAP,KAAiB,cAAjB,CACA,OAAQC,QAAR,CAAiBC,WAAjB,CAA6BC,WAA7B,KAA+C,QAA/C,C,wFACA,GAAMC,CAAAA,iBAAiB,CAAG,CAAEC,KAAK,CAAE,KAAT,CAAeC,SAAS,CAAC,MAAzB,CAA1B,CACA,GAAMC,CAAAA,GAAG,CAAC,QAAJA,CAAAA,GAAI,EAAI,CACV,QAASC,CAAAA,cAAT,CAAwBC,CAAxB,CAA0B,CACtBA,CAAC,CAACC,MAAF,CAASC,UAAT,GACH,CACD,QAASC,CAAAA,eAAT,CAAyBH,CAAzB,CAA2B,CACvBA,CAAC,CAACC,MAAF,CAASG,SAAT,GACH,CACD,mBACI,MAAC,YAAD,EACA,MAAM,CAAE,CAAE,kBAAF,CAAqB,iBAArB,CADR,CAEC,IAAI,CAAE,EAFP,CAGC,eAAe,CAAE,KAHlB,CAIC,KAAK,CAAE,CAACC,KAAK,CAAE,QAAR,CAAkBC,MAAM,CAAE,OAA1B,CAJR,wBAMI,KAAC,SAAD,EACI,WAAW,CAAC,4IADhB,CAEI,GAAG,CAAC,gGAFR,EANJ,CAUCjB,KAAK,CAACkB,GAAN,CAAU,SAAAC,IAAI,CAAE,CACb,mBAAO,MAAC,MAAD,EACP,QAAQ,CAAE,CAACA,IAAI,CAACC,WAAL,CAAiB,CAAjB,CAAD,CAAqBD,IAAI,CAACC,WAAL,CAAiB,CAAjB,CAArB,CADH,CAEP,WAAW,CAAE,qBAACT,CAAD,QAAKG,CAAAA,eAAe,CAACH,CAAD,CAApB,EAFN,CAGP,UAAU,CAAE,oBAACA,CAAD,QAAKD,CAAAA,cAAc,CAACC,CAAD,CAAnB,EAHL,CAIL,IAAI,CAAEP,WAJD,wBAMH,KAAC,KAAD,EAAO,KAAK,CAAE,CAAEa,MAAM,CAAC,OAAT,CAAd,uBACI,KAAC,QAAD,IADJ,EANG,cASH,MAAC,OAAD,6BAAU,KAAC,MAAD,IAAV,GATG,GAAP,CAYH,CAbA,CAVD,CAyBChB,QAAQ,CAACiB,GAAT,CAAa,SAAAG,OAAO,CAAE,CACnB,mBAAO,MAAC,MAAD,EAAQ,QAAQ,CAAE,CAACA,OAAO,CAACD,WAAR,CAAoB,CAApB,CAAD,CAAwBC,OAAO,CAACD,WAAR,CAAoB,CAApB,CAAxB,CAAlB,CAAmE,IAAI,CAAEf,WAAzE,wBACH,KAAC,KAAD,EAAO,KAAK,CAAE,CAAEY,MAAM,CAAC,OAAT,CAAd,uBACI,KAAC,QAAD,IADJ,EADG,cAIH,KAAC,OAAD,8BAJG,GAAP,CAMH,CAPA,CAzBD,cAkCA,KAAC,OAAD,EAAS,WAAW,CAAEX,iBAAtB,CAAyC,SAAS,CAAEJ,IAApD,EAlCA,GADJ,CAwCH,CA/CD,CAgDA,cAAeO,CAAAA,GAAf","sourcesContent":["import  React,{ useEffect,useState }from \"react\";\nimport { MapContainer, useMapEvents,TileLayer, Marker, Popup ,Tooltip,Polygon} from 'react-leaflet';\n//import {useSelector,useDispatch} from 'react-redux';\n//import {endPart,showMarkers,incrementDifference} from '../actions/actions';\n//import {haversineDistance}from '../util/drawData.js';\nimport Calendar from './Calendar';\nimport Status from './Status';\nimport seats from '../data/seats';\nimport parkings from '../data/parkings';\nimport area from '../data/area';\nimport {seatIcon,freSeatIcon,parkingIcon} from './Icon'\nconst transparentOption = { color: 'red',fillColor:\"none\" }\nconst Map=()=>{\n    function handleMouseOut(e){\n        e.target.closePopup();\n    }\n    function handleMouseOver(e){\n        e.target.openPopup();\n    }\n    return(\n        <MapContainer \n        center={[ 24.791658318888238,46.74198403820229 ]}\n         zoom={20} \n         scrollWheelZoom={false} \n         style={{width: '1833px', height: '700px'}}  \n        > \n            <TileLayer\n                attribution='Tiles &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community'\n                url=\"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}'\"\n            />\n        {seats.map(seat=>{\n            return <Marker \n            position={[seat.coordinates[1],seat.coordinates[0]]} \n            onMouseOver={(e)=>handleMouseOver(e)}\n            onMouseOut={(e)=>handleMouseOut(e)}\n              icon={freSeatIcon}\n            >\n                <Popup style={{ height:\"400px\"}}>\n                    <Calendar/>\n                </Popup>\n                <Tooltip> <Status/></Tooltip>\n\n            </Marker>\n        })    \n        }\n        {parkings.map(parking=>{\n            return <Marker position={[parking.coordinates[1],parking.coordinates[0]]} icon={parkingIcon}>\n                <Popup style={{ height:\"400px\"}}>\n                    <Calendar/>\n                </Popup>\n                <Tooltip> This is a park</Tooltip>\n            </Marker>\n        })    \n        }\n        <Polygon pathOptions={transparentOption} positions={area} />\n\n        </MapContainer>\n\n    );\n}\nexport default Map;"]},"metadata":{},"sourceType":"module"}