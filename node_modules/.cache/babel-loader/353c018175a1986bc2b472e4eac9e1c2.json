{"ast":null,"code":"var _jsxFileName = \"/home/abdel/Desktop/parking-react-client/src/components/slotTime.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Avatar from '@material-ui/core/Avatar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper\n  }\n}));\nconst slots = [{\n  key: 1,\n  startTime: \"8:00\",\n  endTime: \"10:00\"\n}, {\n  key: 2,\n  startTime: \"10:00\",\n  endTime: \"12:00\"\n}, {\n  key: 3,\n  startTime: \"14:00\",\n  endTime: \"16:00\"\n}, {\n  key: 4,\n  startTime: \"16:00\",\n  endTime: \"18:00\"\n}];\n\nconst SlotTime = () => {\n  _s();\n\n  const classes = useStyles();\n  const [selected, setSelected] = React.useState(\"\");\n  const [selectedIndex, setSelectedIndex] = React.useState(-1);\n\n  function handleChange(e, index) {\n    setSelectedIndex(index);\n  }\n\n  useEffect(() => {\n    alert(selectedIndex);\n  }, [selectedIndex]);\n  return /*#__PURE__*/_jsxDEV(List, {\n    dense: true,\n    className: classes.root,\n    children: slots.map(slot => {\n      const labelId = `chose a slot`;\n      return /*#__PURE__*/_jsxDEV(ListItem, {\n        button: true,\n        selected: selectedIndex === slot.key,\n        onClick: e => handleChange(e, slot.key),\n        disabled: true,\n        children: /*#__PURE__*/_jsxDEV(ListItemText, {\n          id: slot.key,\n          primary: `${slot.startTime}-${slot.endTime}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)\n      }, slot.key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SlotTime, \"WMnhZ/IwylAj767WR09jLe2T+w4=\", false, function () {\n  return [useStyles];\n});\n\n_c = SlotTime;\nexport default SlotTime;\n\nvar _c;\n\n$RefreshReg$(_c, \"SlotTime\");","map":{"version":3,"sources":["/home/abdel/Desktop/parking-react-client/src/components/slotTime.js"],"names":["React","useEffect","makeStyles","List","ListItem","ListItemSecondaryAction","ListItemText","ListItemAvatar","Checkbox","Avatar","useStyles","theme","root","width","maxWidth","backgroundColor","palette","background","paper","slots","key","startTime","endTime","SlotTime","classes","selected","setSelected","useState","selectedIndex","setSelectedIndex","handleChange","e","index","alert","map","slot","labelId"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,uBAAP,MAAoC,2CAApC;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;;AAEA,MAAMC,SAAS,GAAGR,UAAU,CAAES,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE,MADH;AAEJC,IAAAA,QAAQ,EAAE,GAFN;AAGJC,IAAAA,eAAe,EAAEJ,KAAK,CAACK,OAAN,CAAcC,UAAd,CAAyBC;AAHtC;AADiC,CAAZ,CAAD,CAA5B;AAOA,MAAMC,KAAK,GAAC,CACZ;AAACC,EAAAA,GAAG,EAAC,CAAL;AAAOC,EAAAA,SAAS,EAAC,MAAjB;AAAwBC,EAAAA,OAAO,EAAC;AAAhC,CADY,EAEZ;AAACF,EAAAA,GAAG,EAAC,CAAL;AAAOC,EAAAA,SAAS,EAAC,OAAjB;AAAyBC,EAAAA,OAAO,EAAC;AAAjC,CAFY,EAGZ;AAACF,EAAAA,GAAG,EAAC,CAAL;AAAOC,EAAAA,SAAS,EAAC,OAAjB;AAAyBC,EAAAA,OAAO,EAAC;AAAjC,CAHY,EAIZ;AAACF,EAAAA,GAAG,EAAC,CAAL;AAAOC,EAAAA,SAAS,EAAC,OAAjB;AAAyBC,EAAAA,OAAO,EAAC;AAAjC,CAJY,CAAZ;;AAOC,MAAMC,QAAQ,GAAC,MAAK;AAAA;;AACnB,QAAMC,OAAO,GAAGd,SAAS,EAAzB;AACA,QAAM,CAACe,QAAD,EAAYC,WAAZ,IAA2B1B,KAAK,CAAC2B,QAAN,CAAe,EAAf,CAAjC;AACA,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoC7B,KAAK,CAAC2B,QAAN,CAAe,CAAC,CAAhB,CAA1C;;AAEA,WAASG,YAAT,CAAsBC,CAAtB,EAAwBC,KAAxB,EAA8B;AAC5BH,IAAAA,gBAAgB,CAACG,KAAD,CAAhB;AACD;;AACD/B,EAAAA,SAAS,CAAC,MAAI;AACZgC,IAAAA,KAAK,CAACL,aAAD,CAAL;AACD,GAFQ,EAEP,CAACA,aAAD,CAFO,CAAT;AAGA,sBACE,QAAC,IAAD;AAAM,IAAA,KAAK,MAAX;AAAY,IAAA,SAAS,EAAEJ,OAAO,CAACZ,IAA/B;AAAA,cACGO,KAAK,CAACe,GAAN,CAAWC,IAAD,IAAU;AACnB,YAAMC,OAAO,GAAI,cAAjB;AACA,0BACE,QAAC,QAAD;AAAyB,QAAA,MAAM,MAA/B;AACA,QAAA,QAAQ,EAAER,aAAa,KAAKO,IAAI,CAACf,GADjC;AAEA,QAAA,OAAO,EAAGW,CAAD,IAAKD,YAAY,CAACC,CAAD,EAAGI,IAAI,CAACf,GAAR,CAF1B;AAGA,QAAA,QAAQ,MAHR;AAAA,+BAME,QAAC,YAAD;AAAc,UAAA,EAAE,EAAEe,IAAI,CAACf,GAAvB;AAA4B,UAAA,OAAO,EAAG,GAAEe,IAAI,CAACd,SAAU,IAAGc,IAAI,CAACb,OAAQ;AAAvE;AAAA;AAAA;AAAA;AAAA;AANF,SAAea,IAAI,CAACf,GAApB;AAAA;AAAA;AAAA;AAAA,cADF;AAUD,KAZA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CA5BA;;GAAMG,Q;UACWb,S;;;KADXa,Q;AA6BP,eAAeA,QAAf","sourcesContent":["import React,{useEffect} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Avatar from '@material-ui/core/Avatar';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\nconst slots=[\n{key:1,startTime:\"8:00\",endTime:\"10:00\"},\n{key:2,startTime:\"10:00\",endTime:\"12:00\"},\n{key:3,startTime:\"14:00\",endTime:\"16:00\"},\n{key:4,startTime:\"16:00\",endTime:\"18:00\"},\n\n];\n const SlotTime=() =>{\n  const classes = useStyles();\n  const [selected , setSelected] = React.useState(\"\");\n  const [selectedIndex, setSelectedIndex] = React.useState(-1);\n\n  function handleChange(e,index){\n    setSelectedIndex(index); \n  }\n  useEffect(()=>{\n    alert(selectedIndex);\n  },[selectedIndex]);\n  return (\n    <List dense className={classes.root} >\n      {slots.map((slot) => {\n        const labelId = `chose a slot`;\n        return (\n          <ListItem key={slot.key} button\n          selected={selectedIndex === slot.key}\n          onClick={(e)=>handleChange(e,slot.key)}\n          disabled\n          \n          >\n            <ListItemText id={slot.key} primary={`${slot.startTime}-${slot.endTime}`} />\n          </ListItem>\n        );\n      })}\n    </List>\n  );\n}\nexport default SlotTime;"]},"metadata":{},"sourceType":"module"}