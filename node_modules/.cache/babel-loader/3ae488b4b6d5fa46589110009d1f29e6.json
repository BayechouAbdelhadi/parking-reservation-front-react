{"ast":null,"code":"var _jsxFileName = \"/home/abdel/Desktop/parking-reservation-front-react/src/components/Map.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useCallback, useState } from \"react\";\nimport { MapContainer, useMapEvent, TileLayer, Polygon } from 'react-leaflet';\nimport 'leaflet-fullscreen/dist/Leaflet.fullscreen.js';\nimport 'leaflet/dist/leaflet.css';\nimport IconButton from '@material-ui/core/IconButton';\nimport { FiKey } from \"react-icons/fi\";\nimport seats from '../data/seats';\nimport parkings from '../data/parkings';\nimport area from '../data/area';\nimport Key from \"./Key\";\nimport SeatMarker from \"./SeatMarker\";\nimport ParkingMarker from \"./ParkingMarker\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst transparentOption = {\n  color: 'red',\n  fillColor: \"none\"\n};\n\nconst Content = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [seats.map(seat => {\n      return /*#__PURE__*/_jsxDEV(SeatMarker, {\n        seat: seat\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 24\n      }, this);\n    }), parkings.map(parking => {\n      return /*#__PURE__*/_jsxDEV(ParkingMarker, {\n        parking: parking\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 24\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(Polygon, {\n      pathOptions: transparentOption,\n      positions: area\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_c = Content;\n\nconst Map = () => {\n  _s();\n\n  const [showKey, setShowKey] = useState(true);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {},\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(MapContainer, {\n        center: [24.790813855392256, 46.741996280426456],\n        zoom: window.innerWidth < 600 ? 18 : 20,\n        scrollWheelZoom: false,\n        style: {\n          height: 1000,\n          flex: 1\n        },\n        fullscreenControl: true,\n        children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n          attribution: \"\\xA9 <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n          url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Content, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(KeyControll, {\n          showKey: showKey,\n          setShowKey: setShowKey\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 12\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Map, \"u71F6zvsgL2pHvk0w49B3JdhGS0=\");\n\n_c2 = Map;\n\nfunction KeyControll({\n  showKey,\n  setShowKey\n}) {\n  _s2();\n\n  const onClick = useCallback(e => {\n    setShowKey(!showKey);\n  });\n  useMapEvent('click', onClick);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"leaflet-control leaflet-bar  leaflet-top leaflet-right\",\n    style: {\n      backgroundColor: 'rgb(3, 36, 252)',\n      opacity: '0.50'\n    },\n    children: /*#__PURE__*/_jsxDEV(IconButton, {\n      children: /*#__PURE__*/_jsxDEV(FiKey, {\n        size: \"25\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 12\n  }, this);\n}\n\n_s2(KeyControll, \"eryb3xno4IKdaMIRj/coguYV/VI=\", false, function () {\n  return [useMapEvent];\n});\n\n_c3 = KeyControll;\nexport default Map;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Content\");\n$RefreshReg$(_c2, \"Map\");\n$RefreshReg$(_c3, \"KeyControll\");","map":{"version":3,"sources":["/home/abdel/Desktop/parking-reservation-front-react/src/components/Map.js"],"names":["React","useCallback","useState","MapContainer","useMapEvent","TileLayer","Polygon","IconButton","FiKey","seats","parkings","area","Key","SeatMarker","ParkingMarker","transparentOption","color","fillColor","Content","map","seat","parking","Map","showKey","setShowKey","window","innerWidth","height","flex","KeyControll","onClick","e","backgroundColor","opacity"],"mappings":"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","sourcesContent":["import React, { useCallback, useState } from \"react\";\nimport { MapContainer, useMapEvent, TileLayer, Polygon } from 'react-leaflet';\nimport 'leaflet-fullscreen/dist/Leaflet.fullscreen.js'\nimport 'leaflet/dist/leaflet.css'\nimport IconButton from '@material-ui/core/IconButton';\nimport { FiKey } from \"react-icons/fi\";\nimport seats from '../data/seats';\nimport parkings from '../data/parkings';\nimport area from '../data/area';\nimport Key from \"./Key\";\nimport SeatMarker from \"./SeatMarker\";\nimport ParkingMarker from \"./ParkingMarker\";\n\nconst transparentOption = { color: 'red', fillColor: \"none\" }\n\nconst Content = () => {\n\n    return (\n        <>\n            {seats.map(seat => {\n                return <SeatMarker seat={seat} />\n            })\n            }\n            {parkings.map(parking => {\n                return <ParkingMarker parking={parking} />\n            })\n            }\n            <Polygon pathOptions={transparentOption} positions={area} />\n        </>)\n}\nconst Map = () => {\n    const [showKey, setShowKey] = useState(true);\n    return (\n        <div style={{}}>\n           <div>\n            <MapContainer\n                center={[24.790813855392256, 46.741996280426456]}\n                zoom={window.innerWidth < 600 ? 18 : 20}\n                scrollWheelZoom={false}\n                style={{ height: 1000 ,flex:1}}\n                fullscreenControl={true}\n\n            >\n                <TileLayer\n\n                    attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                />\n                <Content />\n                <KeyControll showKey={showKey} setShowKey={setShowKey} />\n            </MapContainer>\n            </div>\n            {/*showKey &&\n                <div style={{ backgroundColor: 'white' }}>\n                    <Key />\n                </div>*/\n            }\n        </div>\n    );\n}\nfunction KeyControll({ showKey, setShowKey }) {\n\n    const onClick = useCallback(\n        (e) => {\n            setShowKey(!showKey);\n        },\n    )\n    useMapEvent('click', onClick)\n    return <div className=\"leaflet-control leaflet-bar  leaflet-top leaflet-right\" style={{\n        backgroundColor: 'rgb(3, 36, 252)', opacity: '0.50'\n    }}>\n        <IconButton>\n            <FiKey size=\"25\" />\n        </IconButton>\n    </div>\n}\nexport default Map;"]},"metadata":{},"sourceType":"module"}