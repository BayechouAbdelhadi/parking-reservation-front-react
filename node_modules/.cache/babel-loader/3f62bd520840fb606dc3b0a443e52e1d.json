{"ast":null,"code":"var _jsxFileName = \"/home/abdel/Desktop/parking-reservation-front-react/src/components/ParkingCalendar.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\nimport { isWithinInterval } from \"date-fns\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction isWithinRange(date, range) {\n  return isWithinInterval(date, {\n    start: range[0],\n    end: range[1]\n  });\n}\n\nfunction isWithinRanges(date, ranges) {\n  return ranges.some(range => isWithinRange(date, range));\n}\n\nconst disabledDates = [new Date(2021, 4, 1), new Date(2021, 4, 2)];\nconst disabledRanges = [[in3Days, in5Days], [in13Days, in15Days]];\n\nconst ParkingCalendar = () => {\n  _s();\n\n  const [dateValue, setDateValue] = useState(new Date());\n\n  function tileDisabled({\n    date,\n    view\n  }) {\n    if (view === 'month') {\n      return isWithinRanges(date, disabledRanges);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Calendar, {\n      onChange: onChange,\n      tileDisabled: disableDates,\n      minDate: new Date(Date.now()),\n      value: dateValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ParkingCalendar, \"bk01694yyEWcXX3lssuxMTbEuwE=\");\n\n_c = ParkingCalendar;\nexport default ParkingCalendar;\n\nvar _c;\n\n$RefreshReg$(_c, \"ParkingCalendar\");","map":{"version":3,"sources":["/home/abdel/Desktop/parking-reservation-front-react/src/components/ParkingCalendar.js"],"names":["React","Calendar","isWithinInterval","isWithinRange","date","range","start","end","isWithinRanges","ranges","some","disabledDates","Date","disabledRanges","in3Days","in5Days","in13Days","in15Days","ParkingCalendar","dateValue","setDateValue","useState","tileDisabled","view","onChange","disableDates","now"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAO,kCAAP;AACA,SAASC,gBAAT,QAAiC,UAAjC;;;AAEA,SAASC,aAAT,CAAuBC,IAAvB,EAA6BC,KAA7B,EAAoC;AAChC,SAAOH,gBAAgB,CAACE,IAAD,EAAO;AAAEE,IAAAA,KAAK,EAAED,KAAK,CAAC,CAAD,CAAd;AAAmBE,IAAAA,GAAG,EAAEF,KAAK,CAAC,CAAD;AAA7B,GAAP,CAAvB;AACH;;AACD,SAASG,cAAT,CAAwBJ,IAAxB,EAA8BK,MAA9B,EAAsC;AAClC,SAAOA,MAAM,CAACC,IAAP,CAAYL,KAAK,IAAIF,aAAa,CAACC,IAAD,EAAOC,KAAP,CAAlC,CAAP;AACH;;AAED,MAAMM,aAAa,GAAG,CAClB,IAAIC,IAAJ,CAAS,IAAT,EAAc,CAAd,EAAgB,CAAhB,CADkB,EAElB,IAAIA,IAAJ,CAAS,IAAT,EAAc,CAAd,EAAgB,CAAhB,CAFkB,CAAtB;AAIA,MAAMC,cAAc,GAAG,CACnB,CAACC,OAAD,EAAUC,OAAV,CADmB,EAEnB,CAACC,QAAD,EAAWC,QAAX,CAFmB,CAAvB;;AAIA,MAAOC,eAAe,GAAC,MAAI;AAAA;;AACvB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BC,QAAQ,CAAC,IAAIT,IAAJ,EAAD,CAA1C;;AAEA,WAASU,YAAT,CAAsB;AAAElB,IAAAA,IAAF;AAAQmB,IAAAA;AAAR,GAAtB,EAAsC;AAClC,QAAIA,IAAI,KAAK,OAAb,EAAsB;AACpB,aAAOf,cAAc,CAACJ,IAAD,EAAOS,cAAP,CAArB;AACD;AACJ;;AAED,sBACI;AAAA,2BACI,QAAC,QAAD;AACI,MAAA,QAAQ,EAAEW,QADd;AAEI,MAAA,YAAY,EAAEC,YAFlB;AAGI,MAAA,OAAO,EAAE,IAAIb,IAAJ,CAAUA,IAAI,CAACc,GAAL,EAAV,CAHb;AAII,MAAA,KAAK,EAAEP;AAJX;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CAnBD;;GAAOD,e;;KAAAA,e;AAoBP,eAAeA,eAAf","sourcesContent":["import React from \"react\";\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\nimport { isWithinInterval } from \"date-fns\";\n\nfunction isWithinRange(date, range) {\n    return isWithinInterval(date, { start: range[0], end: range[1] });\n}\nfunction isWithinRanges(date, ranges) {\n    return ranges.some(range => isWithinRange(date, range));\n}\n\nconst disabledDates = [\n    new Date(2021,4,1),\n    new Date(2021,4,2),\n];\nconst disabledRanges = [\n    [in3Days, in5Days],\n    [in13Days, in15Days],\n  ];\nconst  ParkingCalendar=()=>{\n    const [dateValue, setDateValue] = useState(new Date());\n\n    function tileDisabled({ date, view }) {\n        if (view === 'month') {\n          return isWithinRanges(date, disabledRanges);\n        }\n    }\n\n    return(\n        <div>\n            <Calendar\n                onChange={onChange}\n                tileDisabled={disableDates}\n                minDate={new Date((Date.now()))}\n                value={dateValue}\n            ></Calendar>\n        </div>\n    )\n}\nexport default ParkingCalendar;"]},"metadata":{},"sourceType":"module"}