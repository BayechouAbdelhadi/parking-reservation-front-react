{"ast":null,"code":"var _jsxFileName = \"/home/abdel/Desktop/parking-reservation-front-react/src/components/SlotTime.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Avatar from '@material-ui/core/Avatar';\nimport axios from 'axios';\nimport authHeader from \"../securityUtils/authorisationHeader\";\nimport SERVER_URL from '../securityUtils/path';\nimport formatDate from \"../util/formatDate\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n    border: 'solid',\n    borderRadius: 15\n  }\n}));\nconst slots = [{\n  key: 1,\n  startTime: \"8:00\",\n  endTime: \"10:00\"\n}, {\n  key: 2,\n  startTime: \"10:00\",\n  endTime: \"12:00\"\n}, {\n  key: 3,\n  startTime: \"14:00\",\n  endTime: \"16:00\"\n}, {\n  key: 4,\n  startTime: \"16:00\",\n  endTime: \"18:00\"\n}];\n\nconst SlotTime = ({\n  setTimeSelected,\n  setTimeValue,\n  seat,\n  dateValue\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const [selected, setSelected] = useState(\"\");\n  const [todayReservation, seTodayReservation] = useState([]);\n  const [selectedIndex, setSelectedIndex] = useState(-1);\n\n  function handleChange(e, index) {\n    setSelectedIndex(index);\n    setTimeSelected(true);\n    setTimeValue(index);\n  }\n\n  useEffect(async () => {\n    async function fetch() {}\n  }, [dateValue]);\n  return /*#__PURE__*/_jsxDEV(List, {\n    dense: true,\n    className: classes.root,\n    children: slots.map(slot => {\n      const labelId = `chose a slot`;\n      return /*#__PURE__*/_jsxDEV(ListItem, {\n        button: true,\n        selected: selectedIndex === slot.key,\n        onClick: e => handleChange(e, slot.key),\n        disabled: todayReservation.filter(item => item.time === slot.key).length > 0 ? true : false,\n        children: /*#__PURE__*/_jsxDEV(ListItemText, {\n          id: slot.key,\n          primary: `${slot.startTime}-${slot.endTime}`,\n          align: \"center\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)\n      }, slot.key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SlotTime, \"9u9Nxf/9QfGnjMAysA1/1cXdLOY=\", false, function () {\n  return [useStyles];\n});\n\n_c = SlotTime;\nexport default SlotTime;\n\nvar _c;\n\n$RefreshReg$(_c, \"SlotTime\");","map":{"version":3,"sources":["/home/abdel/Desktop/parking-reservation-front-react/src/components/SlotTime.js"],"names":["React","useEffect","useState","makeStyles","List","ListItem","ListItemSecondaryAction","ListItemText","ListItemAvatar","Checkbox","Avatar","axios","authHeader","SERVER_URL","formatDate","useStyles","theme","root","width","maxWidth","backgroundColor","palette","background","paper","border","borderRadius","slots","key","startTime","endTime","SlotTime","setTimeSelected","setTimeValue","seat","dateValue","classes","selected","setSelected","todayReservation","seTodayReservation","selectedIndex","setSelectedIndex","handleChange","e","index","fetch","map","slot","labelId","filter","item","time","length"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Avatar from '@material-ui/core/Avatar';\nimport axios from 'axios';\nimport authHeader from \"../securityUtils/authorisationHeader\"\nimport SERVER_URL from '../securityUtils/path';\nimport formatDate from \"../util/formatDate\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n    border: 'solid',\n    borderRadius: 15\n  },\n}));\nconst slots = [\n  { key: 1, startTime: \"8:00\", endTime: \"10:00\" },\n  { key: 2, startTime: \"10:00\", endTime: \"12:00\" },\n  { key: 3, startTime: \"14:00\", endTime: \"16:00\" },\n  { key: 4, startTime: \"16:00\", endTime: \"18:00\" },\n\n];\nconst SlotTime = ({ setTimeSelected, setTimeValue, seat, dateValue }) => {\n  const classes = useStyles();\n  const [selected, setSelected] = useState(\"\");\n  const [todayReservation, seTodayReservation] = useState([]);\n\n  const [selectedIndex, setSelectedIndex] = useState(-1);\n\n  function handleChange(e, index) {\n    setSelectedIndex(index);\n    setTimeSelected(true);\n    setTimeValue(index);\n  }\n  useEffect(async () => {\n    async function fetch (){\n\n    }\n    \n  }, [dateValue]);\n  return (\n    <List dense className={classes.root} >\n      {slots.map((slot) => {\n        const labelId = `chose a slot`;\n        return (\n          <ListItem key={slot.key} button\n            selected={selectedIndex === slot.key}\n            onClick={(e) => handleChange(e, slot.key)}\n            disabled={todayReservation.filter(item => item.time === slot.key).length > 0 ? true : false}\n          >\n            <ListItemText id={slot.key} primary={`${slot.startTime}-${slot.endTime}`} align=\"center\" />\n          </ListItem>\n        );\n      })}\n    </List>\n  );\n}\nexport default SlotTime;"]},"metadata":{},"sourceType":"module"}