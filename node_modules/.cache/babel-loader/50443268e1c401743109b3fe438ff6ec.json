{"ast":null,"code":"import axios from \"axios\";\nimport { GET_ERRORS, SET_TODAY_RESERVATION } from \"./types\";\nimport authHeader from \"../securityUtils/authorisationHeader\";\nimport SERVER_URL from '../securityUtils/path';\nexport const saveSeatReservation = (reservation, history) => async dispatch => {\n  await axios({\n    url: `${SERVER_URL}/api/seats`,\n    method: 'post',\n    Authorisation: authHeader,\n    data: reservation\n  }).then(res => {\n    history.push('/profile');\n  }).catch(err => {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  });\n};\nexport const findReservation = () => async dispatch => {\n  await axios({\n    url: `${SERVER_URL}/api/seats`,\n    method: 'get',\n    Authorisation: authHeader,\n    data: reservation\n  }).then(res => {\n    history.push('/profile');\n  }).catch(err => {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  });\n};\nexport const findTodayReservation = seat => async dispatch => {\n  await axios.get(`${SERVER_URL}/api/seats/${seat}`, {\n    \"Authorisation\": authHeader\n  }).then(response => {\n    const reservations = response.data;\n    dispatch({\n      type: SET_TODAY_RESERVATION,\n      payload: reservations\n    });\n  }).catch(error => {\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.response.data\n    });\n  });\n};","map":{"version":3,"sources":["/home/abdel/Desktop/parking-reservation-front-react/src/actions/reservationActions.js"],"names":["axios","GET_ERRORS","SET_TODAY_RESERVATION","authHeader","SERVER_URL","saveSeatReservation","reservation","history","dispatch","url","method","Authorisation","data","then","res","push","catch","err","type","payload","response","findReservation","findTodayReservation","seat","get","reservations","error"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,qBAArB,QAAiD,SAAjD;AACA,OAAOC,UAAP,MAAuB,sCAAvB;AACA,OAAOC,UAAP,MAAwB,uBAAxB;AAEA,OAAO,MAAMC,mBAAmB,GAAG,CAACC,WAAD,EAAaC,OAAb,KAAyB,MAAMC,QAAN,IAAkB;AAC1E,QAAMR,KAAK,CACX;AACES,IAAAA,GAAG,EAAE,GAAEL,UAAW,YADpB;AAEEM,IAAAA,MAAM,EAAC,MAFT;AAGEC,IAAAA,aAAa,EAACR,UAHhB;AAIES,IAAAA,IAAI,EAAEN;AAJR,GADW,CAAL,CAOJO,IAPI,CAOCC,GAAG,IAAE;AACVP,IAAAA,OAAO,CAACQ,IAAR,CAAa,UAAb;AACD,GATK,EAULC,KAVK,CAUCC,GAAG,IACV;AACET,IAAAA,QAAQ,CACN;AACEU,MAAAA,IAAI,EAAEjB,UADR;AAEEkB,MAAAA,OAAO,EAAEF,GAAG,CAACG,QAAJ,CAAaR;AAFxB,KADM,CAAR;AAMD,GAlBK,CAAN;AAmBH,CApBM;AAqBP,OAAO,MAAMS,eAAe,GAAG,MAAM,MAAMb,QAAN,IAAkB;AACrD,QAAMR,KAAK,CACX;AACES,IAAAA,GAAG,EAAE,GAAEL,UAAW,YADpB;AAEEM,IAAAA,MAAM,EAAC,KAFT;AAGEC,IAAAA,aAAa,EAACR,UAHhB;AAIES,IAAAA,IAAI,EAAEN;AAJR,GADW,CAAL,CAOJO,IAPI,CAOCC,GAAG,IAAE;AACVP,IAAAA,OAAO,CAACQ,IAAR,CAAa,UAAb;AACD,GATK,EAULC,KAVK,CAUCC,GAAG,IACV;AACET,IAAAA,QAAQ,CACN;AACEU,MAAAA,IAAI,EAAEjB,UADR;AAEEkB,MAAAA,OAAO,EAAEF,GAAG,CAACG,QAAJ,CAAaR;AAFxB,KADM,CAAR;AAMD,GAlBK,CAAN;AAmBD,CApBM;AAqBP,OAAO,MAAMU,oBAAoB,GAAIC,IAAD,IAAU,MAAMf,QAAN,IAAkB;AAC3D,QAAMR,KAAK,CAACwB,GAAN,CAAW,GAAEpB,UAAW,cAAamB,IAAK,EAA1C,EAA4C;AAAC,qBAAgBpB;AAAjB,GAA5C,EACNU,IADM,CACDO,QAAQ,IAAE;AACd,UAAMK,YAAY,GAAGL,QAAQ,CAACR,IAA9B;AACAJ,IAAAA,QAAQ,CAAC;AACTU,MAAAA,IAAI,EAAChB,qBADI;AAETiB,MAAAA,OAAO,EAAEM;AAFA,KAAD,CAAR;AAID,GAPM,EAQNT,KARM,CAQAU,KAAK,IAAE;AACZlB,IAAAA,QAAQ,CACN;AACEU,MAAAA,IAAI,EAAEjB,UADR;AAEEkB,MAAAA,OAAO,EAAEO,KAAK,CAACN,QAAN,CAAeR;AAF1B,KADM,CAAR;AAKD,GAdM,CAAN;AAgBF,CAjBI","sourcesContent":["import axios from \"axios\";\nimport { GET_ERRORS ,SET_TODAY_RESERVATION} from \"./types\";\nimport authHeader from \"../securityUtils/authorisationHeader\"\nimport SERVER_URL from  '../securityUtils/path';\n\nexport const saveSeatReservation = (reservation,history) => async dispatch => {\n    await axios(\n    {\n      url:`${SERVER_URL}/api/seats`,\n      method:'post',\n      Authorisation:authHeader,\n      data: reservation\n    }\n    ).then(res=>{\n      history.push('/profile');\n    })\n    .catch(err=>\n    {\n      dispatch(\n        {\n          type: GET_ERRORS,\n          payload: err.response.data\n        });\n      \n    });\n}\nexport const findReservation = () => async dispatch => {\n  await axios(\n  {\n    url:`${SERVER_URL}/api/seats`,\n    method:'get',\n    Authorisation:authHeader,\n    data: reservation\n  }\n  ).then(res=>{\n    history.push('/profile');\n  })\n  .catch(err=>\n  {\n    dispatch(\n      {\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    \n  });\n}\nexport const findTodayReservation = (seat) => async dispatch => {\n     await axios.get(`${SERVER_URL}/api/seats/${seat}`,{\"Authorisation\":authHeader})\n    .then(response=>{\n      const reservations = response.data;\n      dispatch({\n      type:SET_TODAY_RESERVATION ,\n      payload: reservations \n      })\n    })\n    .catch(error=>{\n      dispatch(\n        {\n          type: GET_ERRORS,\n          payload: error.response.data\n        });\n    });\n    \n  }\n"]},"metadata":{},"sourceType":"module"}