{"ast":null,"code":"import axios from \"axios\";\nimport { GET_ERRORS } from \"./types\";\nimport authHeader from \"../securityUtils/authorisationHeader\";\nimport SERVER_URL from '../securityUtils/path';\nexport const saveParkingReservation = (reservation, history) => async dispatch => {\n  await axios({\n    url: `${SERVER_URL}/api/parking`,\n    method: 'post',\n    Authorisation: authHeader,\n    data: reservation\n  }).then(res => {\n    history.push('/profile');\n  }).catch(err => {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  });\n};","map":{"version":3,"sources":["/home/abdel/Desktop/parking-reservation-front-react/src/actions/parkingReservationActions.js"],"names":["axios","GET_ERRORS","authHeader","SERVER_URL","saveParkingReservation","reservation","history","dispatch","url","method","Authorisation","data","then","res","push","catch","err","type","payload","response"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,SAA3B;AACA,OAAOC,UAAP,MAAuB,sCAAvB;AACA,OAAOC,UAAP,MAAwB,uBAAxB;AAEA,OAAO,MAAMC,sBAAsB,GAAG,CAACC,WAAD,EAAaC,OAAb,KAAyB,MAAMC,QAAN,IAAkB;AAC7E,QAAMP,KAAK,CACX;AACEQ,IAAAA,GAAG,EAAE,GAAEL,UAAW,cADpB;AAEEM,IAAAA,MAAM,EAAC,MAFT;AAGEC,IAAAA,aAAa,EAACR,UAHhB;AAIES,IAAAA,IAAI,EAAEN;AAJR,GADW,CAAL,CAOJO,IAPI,CAOCC,GAAG,IAAE;AACVP,IAAAA,OAAO,CAACQ,IAAR,CAAa,UAAb;AACD,GATK,EAULC,KAVK,CAUCC,GAAG,IACV;AACET,IAAAA,QAAQ,CACN;AACEU,MAAAA,IAAI,EAAEhB,UADR;AAEEiB,MAAAA,OAAO,EAAEF,GAAG,CAACG,QAAJ,CAAaR;AAFxB,KADM,CAAR;AAMD,GAlBK,CAAN;AAoBH,CArBM","sourcesContent":["import axios from \"axios\";\nimport { GET_ERRORS } from \"./types\";\nimport authHeader from \"../securityUtils/authorisationHeader\"\nimport SERVER_URL from  '../securityUtils/path';\n\nexport const saveParkingReservation = (reservation,history) => async dispatch => {\n    await axios(\n    {\n      url:`${SERVER_URL}/api/parking`,\n      method:'post',\n      Authorisation:authHeader,\n      data: reservation\n    }\n    ).then(res=>{\n      history.push('/profile');\n    })\n    .catch(err=>\n    {\n      dispatch(\n        {\n          type: GET_ERRORS,\n          payload: err.response.data\n        });\n      \n    });\n\n}"]},"metadata":{},"sourceType":"module"}