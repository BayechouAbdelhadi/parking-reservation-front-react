{"ast":null,"code":"var _jsxFileName = \"/home/abdel/Desktop/parking-react-client/src/components/slotTime.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Avatar from '@material-ui/core/Avatar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper\n  }\n}));\nconst slots = [{\n  startTime: \"8:00\",\n  endTime: \"10:00\"\n}, {\n  startTime: \"10:00\",\n  endTime: \"12:00\"\n}, {\n  startTime: \"14:00\",\n  endTime: \"16:00\"\n}, {\n  startTime: \"16:00\",\n  endTime: \"18:00\"\n}];\n\nconst SlotTime = () => {\n  _s();\n\n  const classes = useStyles();\n  const [checked, setChecked] = React.useState([1]);\n\n  const handleToggle = value => () => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked);\n  };\n\n  return /*#__PURE__*/_jsxDEV(List, {\n    dense: true,\n    className: classes.root,\n    children: slots.map((index, value) => {\n      const labelId = `checkbox-list-secondary-label-${value}`;\n      return /*#__PURE__*/_jsxDEV(ListItem, {\n        button: true,\n        children: /*#__PURE__*/_jsxDEV(ListItemText, {\n          id: labelId,\n          primary: `Line item ${value + 1}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)\n      }, value, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SlotTime, \"XbC/dOvaPtgvS6rn7QFVAzPBVvA=\", false, function () {\n  return [useStyles];\n});\n\n_c = SlotTime;\nexport default SlotTime;\n\nvar _c;\n\n$RefreshReg$(_c, \"SlotTime\");","map":{"version":3,"sources":["/home/abdel/Desktop/parking-react-client/src/components/slotTime.js"],"names":["React","makeStyles","List","ListItem","ListItemSecondaryAction","ListItemText","ListItemAvatar","Checkbox","Avatar","useStyles","theme","root","width","maxWidth","backgroundColor","palette","background","paper","slots","startTime","endTime","SlotTime","classes","checked","setChecked","useState","handleToggle","value","currentIndex","indexOf","newChecked","push","splice","map","index","labelId"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,uBAAP,MAAoC,2CAApC;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;;AAEA,MAAMC,SAAS,GAAGR,UAAU,CAAES,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE,MADH;AAEJC,IAAAA,QAAQ,EAAE,GAFN;AAGJC,IAAAA,eAAe,EAAEJ,KAAK,CAACK,OAAN,CAAcC,UAAd,CAAyBC;AAHtC;AADiC,CAAZ,CAAD,CAA5B;AAOA,MAAMC,KAAK,GAAC,CACZ;AAACC,EAAAA,SAAS,EAAC,MAAX;AAAkBC,EAAAA,OAAO,EAAC;AAA1B,CADY,EAEZ;AAACD,EAAAA,SAAS,EAAC,OAAX;AAAmBC,EAAAA,OAAO,EAAC;AAA3B,CAFY,EAGZ;AAACD,EAAAA,SAAS,EAAC,OAAX;AAAmBC,EAAAA,OAAO,EAAC;AAA3B,CAHY,EAIZ;AAACD,EAAAA,SAAS,EAAC,OAAX;AAAmBC,EAAAA,OAAO,EAAC;AAA3B,CAJY,CAAZ;;AAOC,MAAMC,QAAQ,GAAC,MAAK;AAAA;;AACnB,QAAMC,OAAO,GAAGb,SAAS,EAAzB;AACA,QAAM,CAACc,OAAD,EAAUC,UAAV,IAAwBxB,KAAK,CAACyB,QAAN,CAAe,CAAC,CAAD,CAAf,CAA9B;;AAEA,QAAMC,YAAY,GAAIC,KAAD,IAAW,MAAM;AACpC,UAAMC,YAAY,GAAGL,OAAO,CAACM,OAAR,CAAgBF,KAAhB,CAArB;AACA,UAAMG,UAAU,GAAG,CAAC,GAAGP,OAAJ,CAAnB;;AAEA,QAAIK,YAAY,KAAK,CAAC,CAAtB,EAAyB;AACvBE,MAAAA,UAAU,CAACC,IAAX,CAAgBJ,KAAhB;AACD,KAFD,MAEO;AAAEG,MAAAA,UAAU,CAACE,MAAX,CAAkBJ,YAAlB,EAAgC,CAAhC;AACR;;AAEDJ,IAAAA,UAAU,CAACM,UAAD,CAAV;AACD,GAVD;;AAYA,sBACE,QAAC,IAAD;AAAM,IAAA,KAAK,MAAX;AAAY,IAAA,SAAS,EAAER,OAAO,CAACX,IAA/B;AAAA,cACGO,KAAK,CAACe,GAAN,CAAU,CAACC,KAAD,EAAOP,KAAP,KAAiB;AAC1B,YAAMQ,OAAO,GAAI,iCAAgCR,KAAM,EAAvD;AACA,0BACE,QAAC,QAAD;AAAsB,QAAA,MAAM,MAA5B;AAAA,+BACE,QAAC,YAAD;AAAc,UAAA,EAAE,EAAEQ,OAAlB;AAA2B,UAAA,OAAO,EAAG,aAAYR,KAAK,GAAG,CAAE;AAA3D;AAAA;AAAA;AAAA;AAAA;AADF,SAAeA,KAAf;AAAA;AAAA;AAAA;AAAA,cADF;AAKD,KAPA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CA5BA;;GAAMN,Q;UACWZ,S;;;KADXY,Q;AA6BP,eAAeA,QAAf","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Avatar from '@material-ui/core/Avatar';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\nconst slots=[\n{startTime:\"8:00\",endTime:\"10:00\"},\n{startTime:\"10:00\",endTime:\"12:00\"},\n{startTime:\"14:00\",endTime:\"16:00\"},\n{startTime:\"16:00\",endTime:\"18:00\"},\n\n];\n const SlotTime=() =>{\n  const classes = useStyles();\n  const [checked, setChecked] = React.useState([1]);\n\n  const handleToggle = (value) => () => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else { newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked);\n  };\n\n  return (\n    <List dense className={classes.root}>\n      {slots.map((index,value) => {\n        const labelId = `checkbox-list-secondary-label-${value}`;\n        return (\n          <ListItem key={value} button>\n            <ListItemText id={labelId} primary={`Line item ${value + 1}`} />\n          </ListItem>\n        );\n      })}\n    </List>\n  );\n}\nexport default SlotTime;"]},"metadata":{},"sourceType":"module"}