{"ast":null,"code":"L.Control.Fullscreen = L.Control.extend({\n  options: {\n    position: 'topleft',\n    title: {\n      'false': 'View Fullscreen',\n      'true': 'Exit Fullscreen'\n    }\n  },\n  onAdd: function (map) {\n    var container = L.DomUtil.create('div', 'leaflet-control-fullscreen leaflet-bar leaflet-control');\n    this.link = L.DomUtil.create('a', 'leaflet-control-fullscreen-button leaflet-bar-part', container);\n    this.link.href = '#';\n    this._map = map;\n\n    this._map.on('fullscreenchange', this._toggleTitle, this);\n\n    this._toggleTitle();\n\n    L.DomEvent.on(this.link, 'click', this._click, this);\n    return container;\n  },\n  _click: function (e) {\n    L.DomEvent.stopPropagation(e);\n    L.DomEvent.preventDefault(e);\n\n    this._map.toggleFullscreen(this.options);\n  },\n  _toggleTitle: function () {\n    this.link.title = this.options.title[this._map.isFullscreen()];\n  }\n});\nL.Map.include({\n  isFullscreen: function () {\n    return this._isFullscreen || false;\n  },\n  toggleFullscreen: function (options) {\n    var container = this.getContainer();\n\n    if (this.isFullscreen()) {\n      if (options && options.pseudoFullscreen) {\n        this._disablePseudoFullscreen(container);\n      } else if (document.exitFullscreen) {\n        document.exitFullscreen();\n      } else if (document.mozCancelFullScreen) {\n        document.mozCancelFullScreen();\n      } else if (document.webkitCancelFullScreen) {\n        document.webkitCancelFullScreen();\n      } else if (document.msExitFullscreen) {\n        document.msExitFullscreen();\n      } else {\n        this._disablePseudoFullscreen(container);\n      }\n    } else {\n      if (options && options.pseudoFullscreen) {\n        this._enablePseudoFullscreen(container);\n      } else if (container.requestFullscreen) {\n        container.requestFullscreen();\n      } else if (container.mozRequestFullScreen) {\n        container.mozRequestFullScreen();\n      } else if (container.webkitRequestFullscreen) {\n        container.webkitRequestFullscreen(Element.ALLOW_KEYBOARD_INPUT);\n      } else if (container.msRequestFullscreen) {\n        container.msRequestFullscreen();\n      } else {\n        this._enablePseudoFullscreen(container);\n      }\n    }\n  },\n  _enablePseudoFullscreen: function (container) {\n    L.DomUtil.addClass(container, 'leaflet-pseudo-fullscreen');\n\n    this._setFullscreen(true);\n\n    this.fire('fullscreenchange');\n  },\n  _disablePseudoFullscreen: function (container) {\n    L.DomUtil.removeClass(container, 'leaflet-pseudo-fullscreen');\n\n    this._setFullscreen(false);\n\n    this.fire('fullscreenchange');\n  },\n  _setFullscreen: function (fullscreen) {\n    this._isFullscreen = fullscreen;\n    var container = this.getContainer();\n\n    if (fullscreen) {\n      L.DomUtil.addClass(container, 'leaflet-fullscreen-on');\n    } else {\n      L.DomUtil.removeClass(container, 'leaflet-fullscreen-on');\n    }\n\n    this.invalidateSize();\n  },\n  _onFullscreenChange: function (e) {\n    var fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement || document.msFullscreenElement;\n\n    if (fullscreenElement === this.getContainer() && !this._isFullscreen) {\n      this._setFullscreen(true);\n\n      this.fire('fullscreenchange');\n    } else if (fullscreenElement !== this.getContainer() && this._isFullscreen) {\n      this._setFullscreen(false);\n\n      this.fire('fullscreenchange');\n    }\n  }\n});\nL.Map.mergeOptions({\n  fullscreenControl: false\n});\nL.Map.addInitHook(function () {\n  if (this.options.fullscreenControl) {\n    this.fullscreenControl = new L.Control.Fullscreen(this.options.fullscreenControl);\n    this.addControl(this.fullscreenControl);\n  }\n\n  var fullscreenchange;\n\n  if ('onfullscreenchange' in document) {\n    fullscreenchange = 'fullscreenchange';\n  } else if ('onmozfullscreenchange' in document) {\n    fullscreenchange = 'mozfullscreenchange';\n  } else if ('onwebkitfullscreenchange' in document) {\n    fullscreenchange = 'webkitfullscreenchange';\n  } else if ('onmsfullscreenchange' in document) {\n    fullscreenchange = 'MSFullscreenChange';\n  }\n\n  if (fullscreenchange) {\n    var onFullscreenChange = L.bind(this._onFullscreenChange, this);\n    this.whenReady(function () {\n      L.DomEvent.on(document, fullscreenchange, onFullscreenChange);\n    });\n    this.on('unload', function () {\n      L.DomEvent.off(document, fullscreenchange, onFullscreenChange);\n    });\n  }\n});\n\nL.control.fullscreen = function (options) {\n  return new L.Control.Fullscreen(options);\n};","map":{"version":3,"sources":["/home/abdel/Desktop/parking-reservation-front-react/node_modules/leaflet-fullscreen/dist/Leaflet.fullscreen.js"],"names":["L","Control","Fullscreen","extend","options","position","title","onAdd","map","container","DomUtil","create","link","href","_map","on","_toggleTitle","DomEvent","_click","e","stopPropagation","preventDefault","toggleFullscreen","isFullscreen","Map","include","_isFullscreen","getContainer","pseudoFullscreen","_disablePseudoFullscreen","document","exitFullscreen","mozCancelFullScreen","webkitCancelFullScreen","msExitFullscreen","_enablePseudoFullscreen","requestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","Element","ALLOW_KEYBOARD_INPUT","msRequestFullscreen","addClass","_setFullscreen","fire","removeClass","fullscreen","invalidateSize","_onFullscreenChange","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","msFullscreenElement","mergeOptions","fullscreenControl","addInitHook","addControl","fullscreenchange","onFullscreenChange","bind","whenReady","off","control"],"mappings":"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","sourcesContent":["L.Control.Fullscreen = L.Control.extend({\n    options: {\n        position: 'topleft',\n        title: {\n            'false': 'View Fullscreen',\n            'true': 'Exit Fullscreen'\n        }\n    },\n\n    onAdd: function (map) {\n        var container = L.DomUtil.create('div', 'leaflet-control-fullscreen leaflet-bar leaflet-control');\n\n        this.link = L.DomUtil.create('a', 'leaflet-control-fullscreen-button leaflet-bar-part', container);\n        this.link.href = '#';\n\n        this._map = map;\n        this._map.on('fullscreenchange', this._toggleTitle, this);\n        this._toggleTitle();\n\n        L.DomEvent.on(this.link, 'click', this._click, this);\n\n        return container;\n    },\n\n    _click: function (e) {\n        L.DomEvent.stopPropagation(e);\n        L.DomEvent.preventDefault(e);\n        this._map.toggleFullscreen(this.options);\n    },\n\n    _toggleTitle: function() {\n        this.link.title = this.options.title[this._map.isFullscreen()];\n    }\n});\n\nL.Map.include({\n    isFullscreen: function () {\n        return this._isFullscreen || false;\n    },\n\n    toggleFullscreen: function (options) {\n        var container = this.getContainer();\n        if (this.isFullscreen()) {\n            if (options && options.pseudoFullscreen) {\n                this._disablePseudoFullscreen(container);\n            } else if (document.exitFullscreen) {\n                document.exitFullscreen();\n            } else if (document.mozCancelFullScreen) {\n                document.mozCancelFullScreen();\n            } else if (document.webkitCancelFullScreen) {\n                document.webkitCancelFullScreen();\n            } else if (document.msExitFullscreen) {\n                document.msExitFullscreen();\n            } else {\n                this._disablePseudoFullscreen(container);\n            }\n        } else {\n            if (options && options.pseudoFullscreen) {\n                this._enablePseudoFullscreen(container);\n            } else if (container.requestFullscreen) {\n                container.requestFullscreen();\n            } else if (container.mozRequestFullScreen) {\n                container.mozRequestFullScreen();\n            } else if (container.webkitRequestFullscreen) {\n                container.webkitRequestFullscreen(Element.ALLOW_KEYBOARD_INPUT);\n            } else if (container.msRequestFullscreen) {\n                container.msRequestFullscreen();\n            } else {\n                this._enablePseudoFullscreen(container);\n            }\n        }\n\n    },\n\n    _enablePseudoFullscreen: function (container) {\n        L.DomUtil.addClass(container, 'leaflet-pseudo-fullscreen');\n        this._setFullscreen(true);\n        this.fire('fullscreenchange');\n    },\n\n    _disablePseudoFullscreen: function (container) {\n        L.DomUtil.removeClass(container, 'leaflet-pseudo-fullscreen');\n        this._setFullscreen(false);\n        this.fire('fullscreenchange');\n    },\n\n    _setFullscreen: function(fullscreen) {\n        this._isFullscreen = fullscreen;\n        var container = this.getContainer();\n        if (fullscreen) {\n            L.DomUtil.addClass(container, 'leaflet-fullscreen-on');\n        } else {\n            L.DomUtil.removeClass(container, 'leaflet-fullscreen-on');\n        }\n        this.invalidateSize();\n    },\n\n    _onFullscreenChange: function (e) {\n        var fullscreenElement =\n            document.fullscreenElement ||\n            document.mozFullScreenElement ||\n            document.webkitFullscreenElement ||\n            document.msFullscreenElement;\n\n        if (fullscreenElement === this.getContainer() && !this._isFullscreen) {\n            this._setFullscreen(true);\n            this.fire('fullscreenchange');\n        } else if (fullscreenElement !== this.getContainer() && this._isFullscreen) {\n            this._setFullscreen(false);\n            this.fire('fullscreenchange');\n        }\n    }\n});\n\nL.Map.mergeOptions({\n    fullscreenControl: false\n});\n\nL.Map.addInitHook(function () {\n    if (this.options.fullscreenControl) {\n        this.fullscreenControl = new L.Control.Fullscreen(this.options.fullscreenControl);\n        this.addControl(this.fullscreenControl);\n    }\n\n    var fullscreenchange;\n\n    if ('onfullscreenchange' in document) {\n        fullscreenchange = 'fullscreenchange';\n    } else if ('onmozfullscreenchange' in document) {\n        fullscreenchange = 'mozfullscreenchange';\n    } else if ('onwebkitfullscreenchange' in document) {\n        fullscreenchange = 'webkitfullscreenchange';\n    } else if ('onmsfullscreenchange' in document) {\n        fullscreenchange = 'MSFullscreenChange';\n    }\n\n    if (fullscreenchange) {\n        var onFullscreenChange = L.bind(this._onFullscreenChange, this);\n\n        this.whenReady(function () {\n            L.DomEvent.on(document, fullscreenchange, onFullscreenChange);\n        });\n\n        this.on('unload', function () {\n            L.DomEvent.off(document, fullscreenchange, onFullscreenChange);\n        });\n    }\n});\n\nL.control.fullscreen = function (options) {\n    return new L.Control.Fullscreen(options);\n};\n"]},"metadata":{},"sourceType":"script"}