{"ast":null,"code":"import _objectSpread from\"/home/abdel/Desktop/parking-reservation-front-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _objectWithoutProperties from\"/home/abdel/Desktop/parking-reservation-front-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import React from\"react\";import{Route,Redirect}from\"react-router-dom\";import{useSelector}from\"react-redux\";import{jsx as _jsx}from\"react/jsx-runtime\";var SecuredRoute=function SecuredRoute(_ref){var Component=_ref.component,otherProps=_objectWithoutProperties(_ref,[\"component\"]);var security=useSelector(function(state){return state.security;});return/*#__PURE__*/_jsx(Route,_objectSpread(_objectSpread({},otherProps),{},{render:function render(props){return security.validToken===true?/*#__PURE__*/_jsx(Component,_objectSpread({},props)):/*#__PURE__*/_jsx(Redirect,{to:\"/\"});}}));};export default SecuredRoute;","map":{"version":3,"sources":["/home/abdel/Desktop/parking-reservation-front-react/src/securityUtils/SecureRoute.js"],"names":["React","Route","Redirect","useSelector","SecuredRoute","Component","component","otherProps","security","state","props","validToken"],"mappings":"uWAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,KAAT,CAAgBC,QAAhB,KAAgC,kBAAhC,CACA,OAASC,WAAT,KAA4B,aAA5B,C,2CAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,MAA6C,IAA/BC,CAAAA,SAA+B,MAA1CC,SAA0C,CAAjBC,UAAiB,8CAChE,GAAMC,CAAAA,QAAQ,CAACL,WAAW,CAAC,SAAAM,KAAK,QAAEA,CAAAA,KAAK,CAACD,QAAR,EAAN,CAA1B,CACA,mBACA,KAAC,KAAD,gCACMD,UADN,MAEE,MAAM,CAAE,gBAAAG,KAAK,QACXF,CAAAA,QAAQ,CAACG,UAAT,GAAwB,IAAxB,cACE,KAAC,SAAD,kBAAeD,KAAf,EADF,cAGE,KAAC,QAAD,EAAU,EAAE,CAAC,GAAb,EAJS,EAFf,GADA,CAYD,CAdD,CAgBA,cAAeN,CAAAA,YAAf","sourcesContent":["import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\n\nconst SecuredRoute = ({ component: Component, ...otherProps }) => {\n  const security=useSelector(state=>state.security);\n  return(\n  <Route\n    {...otherProps}\n    render={props =>\n      security.validToken === true ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to=\"/\" />\n      )\n    }\n  />\n  );\n}\n\nexport default SecuredRoute;"]},"metadata":{},"sourceType":"module"}