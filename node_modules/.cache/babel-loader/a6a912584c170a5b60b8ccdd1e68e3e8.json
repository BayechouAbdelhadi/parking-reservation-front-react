{"ast":null,"code":"import _regeneratorRuntime from\"/home/abdel/Desktop/parking-reservation-front-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/abdel/Desktop/parking-reservation-front-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import axios from\"axios\";import{GET_ERRORS,SET_CURRENT_USER,SET_PARTS}from\"./types\";import setJWTToken from\"../securityUtils/setJWTToken\";import jwt_decode from\"jwt-decode\";import authHeader from\"../securityUtils/authorisationHeader\";export var createNewUser=function createNewUser(newUser,history){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axios.post(\"/api/users/register\",newUser).then(function(response){history.push(\"/\");dispatch({type:GET_ERRORS,payload:{}});}).catch(function(error){console.log(error);dispatch({type:GET_ERRORS,payload:error.response.data});});case 2:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();};export var login=function login(LoginRequest){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){var res,token,decoded;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return axios.post(\"/api/users/login\",LoginRequest);case 3:res=_context2.sent;// extract token from res.data\ntoken=res.data.token;// store the token in the localStorage\nlocalStorage.setItem(\"jwtToken\",token);// set our token in header ***\nsetJWTToken(token);// decode token on React\ndecoded=jwt_decode(token);// dispatch to our securityReducer\ndispatch({type:SET_CURRENT_USER,payload:decoded});_context2.next=14;break;case 11:_context2.prev=11;_context2.t0=_context2[\"catch\"](0);dispatch({type:GET_ERRORS,payload:_context2.t0.response.data});case 14:case\"end\":return _context2.stop();}}},_callee2,null,[[0,11]]);}));return function(_x2){return _ref2.apply(this,arguments);};}();};export var logout=function logout(){return function(dispatch){localStorage.removeItem(\"jwtToken\");setJWTToken(false);dispatch({type:SET_CURRENT_USER,payload:{}});};};/*\nexport const saveScore = score => async dispatch => {\n    // post => Login Request\n    await axios(\n    {\n      url:'/api/parts',\n      method:'post',\n      data: score\n    }\n    ).catch(err=>\n    {\n      dispatch(\n        {\n          type: GET_ERRORS,\n          payload: err.response.data\n        });\n      \n    });\n}\n\nexport const findParts = () => async dispatch => {\n     await axios.get(\"/api/parts\",{\"Authorisation\":authHeader})\n    .then(response=>{\n      const parts = response.data;\n      dispatch({\n      type:SET_PARTS ,\n      payload: parts \n      })\n    })\n    .catch(error=>{\n      dispatch(\n        {\n          type: GET_ERRORS,\n          payload: error.response.data\n        });\n    });\n    \n  }\n  */","map":{"version":3,"sources":["/home/abdel/Desktop/parking-reservation-front-react/src/actions/securityActions.js"],"names":["axios","GET_ERRORS","SET_CURRENT_USER","SET_PARTS","setJWTToken","jwt_decode","authHeader","createNewUser","newUser","history","dispatch","post","then","response","push","type","payload","catch","error","console","log","data","login","LoginRequest","res","token","localStorage","setItem","decoded","logout","removeItem"],"mappings":"iVAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,UAAT,CAAqBC,gBAArB,CAAuCC,SAAvC,KAAuD,SAAvD,CACA,MAAOC,CAAAA,WAAP,KAAwB,8BAAxB,CACA,MAAOC,CAAAA,UAAP,KAAuB,YAAvB,CACA,MAAOC,CAAAA,UAAP,KAAuB,sCAAvB,CAEA,MAAO,IAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,OAAD,CAAUC,OAAV,iGAAsB,iBAAMC,QAAN,wIAGzCV,CAAAA,KAAK,CAACW,IAAN,CAAW,qBAAX,CAAkCH,OAAlC,EACLI,IADK,CACA,SAAAC,QAAQ,CAAE,CACdJ,OAAO,CAACK,IAAR,CAAa,GAAb,EACAJ,QAAQ,CACR,CACEK,IAAI,CAAEd,UADR,CAEEe,OAAO,CAAE,EAFX,CADQ,CAAR,CAKD,CARK,EAQHC,KARG,CAQG,SAAAC,KAAK,CAAE,CACdC,OAAO,CAACC,GAAR,CAAYF,KAAZ,EACAR,QAAQ,CACR,CACEK,IAAI,CAAEd,UADR,CAEEe,OAAO,CAAEE,KAAK,CAACL,QAAN,CAAeQ,IAF1B,CADQ,CAAR,CAKD,CAfK,CAHyC,uDAAtB,gEAAtB,CAqBP,MAAO,IAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,CAAAC,YAAY,kGAAI,kBAAMb,QAAN,oLAGfV,CAAAA,KAAK,CAACW,IAAN,CAAW,kBAAX,CAA+BY,YAA/B,CAHe,QAG3BC,GAH2B,gBAIjC;AACQC,KALyB,CAKfD,GAAG,CAACH,IALW,CAKzBI,KALyB,CAMjC;AACAC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAiCF,KAAjC,EACA;AACArB,WAAW,CAACqB,KAAD,CAAX,CACA;AACMG,OAX2B,CAWjBvB,UAAU,CAACoB,KAAD,CAXO,CAYjC;AACAf,QAAQ,CAAC,CACPK,IAAI,CAACb,gBADE,CAEPc,OAAO,CAAEY,OAFF,CAAD,CAAR,CAbiC,qFAmBjClB,QAAQ,CACR,CACEK,IAAI,CAAEd,UADR,CAEEe,OAAO,CAAE,aAAIH,QAAJ,CAAaQ,IAFxB,CADQ,CAAR,CAnBiC,uEAAJ,kEAA1B,CA2BP,MAAO,IAAMQ,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,SAAM,UAAAnB,QAAQ,CAAI,CACtCgB,YAAY,CAACI,UAAb,CAAwB,UAAxB,EACA1B,WAAW,CAAC,KAAD,CAAX,CACAM,QAAQ,CAAC,CACPK,IAAI,CAACb,gBADE,CAEPc,OAAO,CAAE,EAFF,CAAD,CAAR,CAID,CAPqB,EAAf,CAQP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import axios from \"axios\";\nimport { GET_ERRORS, SET_CURRENT_USER ,SET_PARTS} from \"./types\";\nimport setJWTToken from \"../securityUtils/setJWTToken\";\nimport jwt_decode from \"jwt-decode\";\nimport authHeader from \"../securityUtils/authorisationHeader\"\n\nexport const createNewUser = (newUser, history) => async dispatch => \n{\n  \n    await axios.post(\"/api/users/register\", newUser)\n    .then(response=>{\n      history.push(\"/\");\n      dispatch(\n      {\n        type: GET_ERRORS,\n        payload: {}\n      });\n    }).catch(error=>{\n      console.log(error);\n      dispatch(\n      {\n        type: GET_ERRORS,\n        payload: error.response.data\n      });\n    });\n};\n\nexport const login = LoginRequest => async dispatch => {\n  try {\n    // post => Login Request\n    const res = await axios.post(\"/api/users/login\", LoginRequest);\n    // extract token from res.data\n    const { token } = res.data;\n    // store the token in the localStorage\n    localStorage.setItem(\"jwtToken\", token);\n    // set our token in header ***\n    setJWTToken(token);\n    // decode token on React\n    const decoded = jwt_decode(token);\n    // dispatch to our securityReducer\n    dispatch({\n      type:SET_CURRENT_USER ,\n      payload: decoded\n    });\n  } catch (err) \n  {\n    dispatch(\n    {\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const logout = () => dispatch => {\n  localStorage.removeItem(\"jwtToken\");\n  setJWTToken(false);\n  dispatch({\n    type:SET_CURRENT_USER ,\n    payload: {}\n  });\n};\n/*\nexport const saveScore = score => async dispatch => {\n    // post => Login Request\n    await axios(\n    {\n      url:'/api/parts',\n      method:'post',\n      data: score\n    }\n    ).catch(err=>\n    {\n      dispatch(\n        {\n          type: GET_ERRORS,\n          payload: err.response.data\n        });\n      \n    });\n}\n\nexport const findParts = () => async dispatch => {\n     await axios.get(\"/api/parts\",{\"Authorisation\":authHeader})\n    .then(response=>{\n      const parts = response.data;\n      dispatch({\n      type:SET_PARTS ,\n      payload: parts \n      })\n    })\n    .catch(error=>{\n      dispatch(\n        {\n          type: GET_ERRORS,\n          payload: error.response.data\n        });\n    });\n    \n  }\n  */"]},"metadata":{},"sourceType":"module"}