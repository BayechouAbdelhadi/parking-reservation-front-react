{"ast":null,"code":"var _jsxFileName = \"/home/abdel/Desktop/parking-reservation-front-react/src/components/ParkingMarker.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useCallback } from \"react\";\nimport axios from 'axios';\nimport authHeader from \"../securityUtils/authorisationHeader\";\nimport SERVER_URL from '../securityUtils/path';\nimport { Marker, Popup, Tooltip, useMapEvent } from 'react-leaflet';\nimport ParkingCalendar from './ParkingCalendar';\nimport { freeParkingIcon, nonFreeParkingIcon } from './Icon';\nimport { isWithinInterval } from \"date-fns\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction isWithinRange(date, range) {\n  return isWithinInterval(date, {\n    start: range[0],\n    end: range[1]\n  });\n}\n\nfunction isWithinRanges(date, ranges) {\n  return ranges.some(range => isWithinRange(date, range));\n}\n\nfunction isBooked(date, ranges) {\n  return isWithinRanges(date, ranges);\n}\n\nexport default function ParkingMarker({\n  parking\n}) {\n  _s();\n\n  const [booked, setBooked] = useState(false);\n  useEffect(async () => {\n    await axios.get(`${SERVER_URL}/api/parking/${parking.id}`, {\n      \"Authorisation\": authHeader\n    }).then(response => {\n      const reservations = response.data;\n      const ranges = response.data.map(res => {\n        const range = [new Date(res.startDate), new Date(res.endDate)];\n        return range;\n      });\n      setBooked(isWithinRanges(new Date(Date.now()), ranges));\n    }).catch(error => {//console.log(error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Marker, {\n    position: [parking.coordinates[1], parking.coordinates[0]],\n    icon: booked ? nonFreeParkingIcon : freeParkingIcon,\n    children: [/*#__PURE__*/_jsxDEV(Popup, {\n      style: {\n        height: \"400px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(ParkingCalendar, {\n        park: parking.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this)\n    }, parking.coordinates[1], false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n      children: \" \\u0645\\u0648\\u0642\\u0641\"\n    }, parking.coordinates[0], false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this)]\n  }, parking.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ParkingMarker, \"/WkzNWdqPof8onBI+6GbYCbxdlc=\");\n\n_c = ParkingMarker;\n\nvar _c;\n\n$RefreshReg$(_c, \"ParkingMarker\");","map":{"version":3,"sources":["/home/abdel/Desktop/parking-reservation-front-react/src/components/ParkingMarker.js"],"names":["React","useEffect","useState","useCallback","axios","authHeader","SERVER_URL","Marker","Popup","Tooltip","useMapEvent","ParkingCalendar","freeParkingIcon","nonFreeParkingIcon","isWithinInterval","isWithinRange","date","range","start","end","isWithinRanges","ranges","some","isBooked","ParkingMarker","parking","booked","setBooked","get","id","then","response","reservations","data","map","res","Date","startDate","endDate","now","catch","error","coordinates","height"],"mappings":"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","sourcesContent":["import React, { useEffect, useState ,useCallback} from \"react\";\nimport axios from 'axios';\nimport authHeader from \"../securityUtils/authorisationHeader\"\nimport SERVER_URL from  '../securityUtils/path';\nimport {Marker, Popup, Tooltip,useMapEvent} from 'react-leaflet';\nimport ParkingCalendar from './ParkingCalendar';\nimport { freeParkingIcon,nonFreeParkingIcon} from './Icon'\nimport { isWithinInterval } from \"date-fns\";\n\nfunction isWithinRange(date, range) {\n    return isWithinInterval(date, { start: range[0], end: range[1] });\n}\nfunction isWithinRanges(date, ranges) {\n    return ranges.some(range => isWithinRange(date, range));\n}\nfunction isBooked(date,ranges){\n    return isWithinRanges(date, ranges)\n}\nexport default function ParkingMarker({parking}){\n\n    const [booked,setBooked]=useState(false);\n    useEffect(async ()=>{\n            await axios.get(`${SERVER_URL}/api/parking/${parking.id}`,{\"Authorisation\":authHeader})\n            .then(response=>{\n                const reservations = response.data;\n                const ranges = response.data.map(res => {\n                    const range = [new Date(res.startDate), new Date(res.endDate)];\n                    return range;\n                });\n                \n                setBooked(isWithinRanges(new Date((Date.now())),ranges));\n            })\n            .catch(error=>{\n                //console.log(error);\n            });\n    },[]);\n    return(\n        <Marker position={[parking.coordinates[1], parking.coordinates[0]]}\n            icon={booked?nonFreeParkingIcon:freeParkingIcon} key={parking.id}\n        >\n                <Popup style={{ height: \"400px\" }} key={parking.coordinates[1]}>\n                    <ParkingCalendar park={parking.id} />\n                </Popup>\n                <Tooltip key={parking.coordinates[0]}> موقف</Tooltip>\n        </Marker>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}