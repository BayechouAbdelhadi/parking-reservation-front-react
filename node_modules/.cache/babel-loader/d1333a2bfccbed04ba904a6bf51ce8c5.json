{"ast":null,"code":"import _regeneratorRuntime from\"/home/abdel/Desktop/parking-reservation-front-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/abdel/Desktop/parking-reservation-front-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import axios from\"axios\";import{GET_ERRORS,SET_TODAY_RESERVATION}from\"./types\";import authHeader from\"../securityUtils/authorisationHeader\";export var saveSeatReservation=function saveSeatReservation(reservation,history){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axios({url:'/api/seats',method:'post',Authorisation:authHeader,data:reservation}).then(function(res){history.push('/profile');}).catch(function(err){dispatch({type:GET_ERRORS,payload:err.response.data});});case 2:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();};export var findTodayReservation=function findTodayReservation(seat){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return axios.get(\"/api/seats/\".concat(seat),{\"Authorisation\":authHeader}).then(function(response){var reservations=response.data;dispatch({type:SET_TODAY_RESERVATION,payload:reservations});}).catch(function(error){dispatch({type:GET_ERRORS,payload:error.response.data});});case 2:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x2){return _ref2.apply(this,arguments);};}();};","map":{"version":3,"sources":["/home/abdel/Desktop/parking-reservation-front-react/src/actions/reservationActions.js"],"names":["axios","GET_ERRORS","SET_TODAY_RESERVATION","authHeader","saveSeatReservation","reservation","history","dispatch","url","method","Authorisation","data","then","res","push","catch","err","type","payload","response","findTodayReservation","seat","get","reservations","error"],"mappings":"iVAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,UAAT,CAAqBC,qBAArB,KAAiD,SAAjD,CACA,MAAOC,CAAAA,UAAP,KAAuB,sCAAvB,CAEA,MAAO,IAAMC,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,CAACC,WAAD,CAAaC,OAAb,iGAAyB,iBAAMC,QAAN,wIAElDP,CAAAA,KAAK,CACX,CACEQ,GAAG,CAAC,YADN,CAEEC,MAAM,CAAC,MAFT,CAGEC,aAAa,CAACP,UAHhB,CAIEQ,IAAI,CAAEN,WAJR,CADW,CAAL,CAOJO,IAPI,CAOC,SAAAC,GAAG,CAAE,CACVP,OAAO,CAACQ,IAAR,CAAa,UAAb,EACD,CATK,EAULC,KAVK,CAUC,SAAAC,GAAG,CACV,CACET,QAAQ,CACN,CACEU,IAAI,CAAEhB,UADR,CAEEiB,OAAO,CAAEF,GAAG,CAACG,QAAJ,CAAaR,IAFxB,CADM,CAAR,CAMD,CAlBK,CAFkD,uDAAzB,gEAA5B,CAsBP,MAAO,IAAMS,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,CAACC,IAAD,kGAAU,kBAAMd,QAAN,6IACnCP,CAAAA,KAAK,CAACsB,GAAN,sBAAwBD,IAAxB,EAA+B,CAAC,gBAAgBlB,UAAjB,CAA/B,EACNS,IADM,CACD,SAAAO,QAAQ,CAAE,CACd,GAAMI,CAAAA,YAAY,CAAGJ,QAAQ,CAACR,IAA9B,CACAJ,QAAQ,CAAC,CACTU,IAAI,CAACf,qBADI,CAETgB,OAAO,CAAEK,YAFA,CAAD,CAAR,CAID,CAPM,EAQNR,KARM,CAQA,SAAAS,KAAK,CAAE,CACZjB,QAAQ,CACN,CACEU,IAAI,CAAEhB,UADR,CAEEiB,OAAO,CAAEM,KAAK,CAACL,QAAN,CAAeR,IAF1B,CADM,CAAR,CAKD,CAdM,CADmC,yDAAV,kEAA7B","sourcesContent":["import axios from \"axios\";\nimport { GET_ERRORS ,SET_TODAY_RESERVATION} from \"./types\";\nimport authHeader from \"../securityUtils/authorisationHeader\"\n\nexport const saveSeatReservation = (reservation,history) => async dispatch => {\n    // post => Login Request\n    await axios(\n    {\n      url:'/api/seats',\n      method:'post',\n      Authorisation:authHeader,\n      data: reservation\n    }\n    ).then(res=>{\n      history.push('/profile');\n    })\n    .catch(err=>\n    {\n      dispatch(\n        {\n          type: GET_ERRORS,\n          payload: err.response.data\n        });\n      \n    });\n}\nexport const findTodayReservation = (seat) => async dispatch => {\n     await axios.get(`/api/seats/${seat}`,{\"Authorisation\":authHeader})\n    .then(response=>{\n      const reservations = response.data;\n      dispatch({\n      type:SET_TODAY_RESERVATION ,\n      payload: reservations \n      })\n    })\n    .catch(error=>{\n      dispatch(\n        {\n          type: GET_ERRORS,\n          payload: error.response.data\n        });\n    });\n    \n  }\n"]},"metadata":{},"sourceType":"module"}