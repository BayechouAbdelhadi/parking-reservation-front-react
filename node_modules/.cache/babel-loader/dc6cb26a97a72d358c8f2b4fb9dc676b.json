{"ast":null,"code":"var _jsxFileName = \"/home/abdel/Desktop/parking-react-client/src/components/Map.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { MapContainer, useMapEvents, TileLayer, Marker, Popup, Polyline } from 'react-leaflet'; //import {useSelector,useDispatch} from 'react-redux';\n//import {endPart,showMarkers,incrementDifference} from '../actions/actions';\n//import {haversineDistance}from '../util/drawData.js';\n\nimport Calendar from './Calendar';\nimport seats from '../data/seats';\nimport parkings from '../data/parkings';\nimport { seatIcon, freSeatIcon, parkingIcon } from './Icon';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst limeOptions = {\n  color: 'red'\n};\n\nconst Map = () => {\n  const handleMouseOut = e => {\n    e.target.openPopup();\n  };\n\n  return /*#__PURE__*/_jsxDEV(MapContainer, {\n    center: [24.791658318888238, 46.74198403820229],\n    zoom: 20,\n    scrollWheelZoom: false,\n    style: {\n      width: '890px',\n      height: '700px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n      attribution: \"Tiles \\xA9 Esri \\u2014 Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community\",\n      url: \"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}'\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), seats.map(seat => {\n      return /*#__PURE__*/_jsxDEV(Marker, {\n        position: [seat.coordinates[1], seat.coordinates[0]],\n        onMouseOver: e => {\n          e.target.openPopup();\n        },\n        onMouseOut: e => {\n          e.target.closePopup();\n        },\n        icon: freSeatIcon,\n        children: /*#__PURE__*/_jsxDEV(Popup, {\n          style: {\n            height: \"400px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Calendar, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 20\n      }, this);\n    }), parkings.map(parking => {\n      return /*#__PURE__*/_jsxDEV(Marker, {\n        position: [parking.coordinates[1], parking.coordinates[0]],\n        icon: parkingIcon,\n        children: /*#__PURE__*/_jsxDEV(Popup, {\n          style: {\n            height: \"400px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Calendar, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 20\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Map;\nexport default Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["/home/abdel/Desktop/parking-react-client/src/components/Map.js"],"names":["React","useEffect","useState","MapContainer","useMapEvents","TileLayer","Marker","Popup","Polyline","Calendar","seats","parkings","seatIcon","freSeatIcon","parkingIcon","limeOptions","color","Map","handleMouseOut","e","target","openPopup","width","height","map","seat","coordinates","closePopup","parking"],"mappings":";AAAA,OAAQA,KAAR,IAAgBC,SAAhB,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAASC,YAAT,EAAuBC,YAAvB,EAAoCC,SAApC,EAA+CC,MAA/C,EAAuDC,KAAvD,EAA8DC,QAA9D,QAA6E,eAA7E,C,CACA;AACA;AACA;;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,SAAQC,QAAR,EAAiBC,WAAjB,EAA6BC,WAA7B,QAA+C,QAA/C;;AACA,MAAMC,WAAW,GAAG;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAApB;;AACA,MAAMC,GAAG,GAAC,MAAI;AACV,QAAMC,cAAc,GAAEC,CAAD,IAAK;AACtBA,IAAAA,CAAC,CAACC,MAAF,CAASC,SAAT;AACH,GAFD;;AAGA,sBACI,QAAC,YAAD;AACA,IAAA,MAAM,EAAE,CAAE,kBAAF,EAAqB,iBAArB,CADR;AAEC,IAAA,IAAI,EAAE,EAFP;AAGC,IAAA,eAAe,EAAE,KAHlB;AAIC,IAAA,KAAK,EAAE;AAACC,MAAAA,KAAK,EAAE,OAAR;AAAiBC,MAAAA,MAAM,EAAE;AAAzB,KAJR;AAAA,4BAMI,QAAC,SAAD;AACI,MAAA,WAAW,EAAC,4IADhB;AAEI,MAAA,GAAG,EAAC;AAFR;AAAA;AAAA;AAAA;AAAA,YANJ,EAUCb,KAAK,CAACc,GAAN,CAAUC,IAAI,IAAE;AACb,0BAAO,QAAC,MAAD;AACP,QAAA,QAAQ,EAAE,CAACA,IAAI,CAACC,WAAL,CAAiB,CAAjB,CAAD,EAAqBD,IAAI,CAACC,WAAL,CAAiB,CAAjB,CAArB,CADH;AAEP,QAAA,WAAW,EAAGP,CAAD,IAAO;AAChBA,UAAAA,CAAC,CAACC,MAAF,CAASC,SAAT;AACD,SAJI;AAKP,QAAA,UAAU,EAAGF,CAAD,IAAO;AACfA,UAAAA,CAAC,CAACC,MAAF,CAASO,UAAT;AACD,SAPI;AAQL,QAAA,IAAI,EAAEd,WARD;AAAA,+BAUH,QAAC,KAAD;AAAO,UAAA,KAAK,EAAE;AAAEU,YAAAA,MAAM,EAAC;AAAT,WAAd;AAAA,iCAEI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA;AAVG;AAAA;AAAA;AAAA;AAAA,cAAP;AAeH,KAhBA,CAVD,EA4BCZ,QAAQ,CAACa,GAAT,CAAaI,OAAO,IAAE;AACnB,0BAAO,QAAC,MAAD;AAAQ,QAAA,QAAQ,EAAE,CAACA,OAAO,CAACF,WAAR,CAAoB,CAApB,CAAD,EAAwBE,OAAO,CAACF,WAAR,CAAoB,CAApB,CAAxB,CAAlB;AAAmE,QAAA,IAAI,EAAEZ,WAAzE;AAAA,+BACH,QAAC,KAAD;AAAO,UAAA,KAAK,EAAE;AAAES,YAAAA,MAAM,EAAC;AAAT,WAAd;AAAA,iCACI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADG;AAAA;AAAA;AAAA;AAAA,cAAP;AAKH,KANA,CA5BD;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAwCH,CA5CD;;KAAMN,G;AA6CN,eAAeA,GAAf","sourcesContent":["import  React,{ useEffect,useState }from \"react\";\nimport { MapContainer, useMapEvents,TileLayer, Marker, Popup ,Polyline} from 'react-leaflet';\n//import {useSelector,useDispatch} from 'react-redux';\n//import {endPart,showMarkers,incrementDifference} from '../actions/actions';\n//import {haversineDistance}from '../util/drawData.js';\nimport Calendar from './Calendar';\nimport seats from '../data/seats';\nimport parkings from '../data/parkings';\nimport {seatIcon,freSeatIcon,parkingIcon} from './Icon'\nconst limeOptions = { color: 'red' }\nconst Map=()=>{\n    const handleMouseOut=(e)=>{\n        e.target.openPopup();\n    }\n    return(\n        <MapContainer \n        center={[ 24.791658318888238,46.74198403820229 ]}\n         zoom={20} \n         scrollWheelZoom={false} \n         style={{width: '890px', height: '700px'}}  \n        > \n            <TileLayer\n                attribution='Tiles &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community'\n                url=\"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}'\"\n            />\n        {seats.map(seat=>{\n            return <Marker \n            position={[seat.coordinates[1],seat.coordinates[0]]} \n            onMouseOver={(e) => {\n                e.target.openPopup();\n              }}\n            onMouseOut={(e) => {\n                e.target.closePopup();\n              }}\n              icon={freSeatIcon}\n            >\n                <Popup style={{ height:\"400px\"}}>\n                    \n                    <Calendar/>\n                </Popup>\n            </Marker>\n        })    \n        }\n        {parkings.map(parking=>{\n            return <Marker position={[parking.coordinates[1],parking.coordinates[0]]} icon={parkingIcon}>\n                <Popup style={{ height:\"400px\"}}>\n                    <Calendar/>\n                </Popup>\n            </Marker>\n        })    \n        }  \n        </MapContainer>\n\n    );\n}\nexport default Map;"]},"metadata":{},"sourceType":"module"}