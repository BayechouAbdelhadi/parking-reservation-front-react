{"ast":null,"code":"var _jsxFileName = \"/home/abdel/Desktop/parking-reservation-front-react/src/components/SlotTime.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Avatar from '@material-ui/core/Avatar';\nimport axios from 'axios';\nimport authHeader from \"../securityUtils/authorisationHeader\";\nimport SERVER_URL from '../securityUtils/path';\nimport formatDate from \"../util/formatDate\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n    border: 'solid',\n    borderRadius: 15\n  }\n}));\nconst slots = [{\n  key: 1,\n  startTime: \"8:00\",\n  endTime: \"10:00\"\n}, {\n  key: 2,\n  startTime: \"10:00\",\n  endTime: \"12:00\"\n}, {\n  key: 3,\n  startTime: \"14:00\",\n  endTime: \"16:00\"\n}, {\n  key: 4,\n  startTime: \"16:00\",\n  endTime: \"18:00\"\n}];\n\nconst SlotTime = ({\n  setTimeSelected,\n  setTimeValue,\n  seat,\n  dateValue\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const [selected, setSelected] = useState(\"\");\n  const [todayReservation, seTodayReservation] = useState([]);\n  const [selectedIndex, setSelectedIndex] = useState(-1);\n\n  function handleChange(e, index) {\n    setSelectedIndex(index);\n    setTimeSelected(true);\n    setTimeValue(index);\n  }\n\n  useEffect(async () => {\n    console.log(formatDate(dateValue));\n    await axios({\n      url: `${SERVER_URL}/api/seats/${seat}`,\n      Authorisation: authHeader,\n      method: \"post\",\n      data: {\n        date: formatDate(dateValue)\n      }\n    }).then(response => {\n      const reservations = response.data;\n      console.log(reservations);\n      seTodayReservation(reservations);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, [dateValue]);\n  return /*#__PURE__*/_jsxDEV(List, {\n    dense: true,\n    className: classes.root,\n    children: slots.map(slot => {\n      const labelId = `chose a slot`;\n      return /*#__PURE__*/_jsxDEV(ListItem, {\n        button: true,\n        selected: selectedIndex === slot.key,\n        onClick: e => handleChange(e, slot.key),\n        disabled: todayReservation.filter(item => item.time === slot.key).length > 0 ? true : false,\n        children: /*#__PURE__*/_jsxDEV(ListItemText, {\n          id: slot.key,\n          primary: `${slot.startTime}-${slot.endTime}`,\n          align: \"center\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)\n      }, slot.key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SlotTime, \"dEsxY5yPIgvYekEdZ6YbpzTbCsc=\", false, function () {\n  return [useStyles];\n});\n\n_c = SlotTime;\nexport default SlotTime;\n\nvar _c;\n\n$RefreshReg$(_c, \"SlotTime\");","map":{"version":3,"sources":["/home/abdel/Desktop/parking-reservation-front-react/src/components/SlotTime.js"],"names":["React","useEffect","useState","makeStyles","List","ListItem","ListItemSecondaryAction","ListItemText","ListItemAvatar","Checkbox","Avatar","axios","authHeader","SERVER_URL","formatDate","useStyles","theme","root","width","maxWidth","backgroundColor","palette","background","paper","border","borderRadius","slots","key","startTime","endTime","SlotTime","setTimeSelected","setTimeValue","seat","dateValue","classes","selected","setSelected","todayReservation","seTodayReservation","selectedIndex","setSelectedIndex","handleChange","e","index","console","log","url","Authorisation","method","data","date","then","response","reservations","catch","error","map","slot","labelId","filter","item","time","length"],"mappings":"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","sourcesContent":["import React,{useEffect,useState} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Avatar from '@material-ui/core/Avatar';\nimport axios from 'axios';\nimport authHeader from \"../securityUtils/authorisationHeader\"\nimport SERVER_URL from  '../securityUtils/path';\nimport formatDate from \"../util/formatDate\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n    border:'solid',\n    borderRadius:15\n  },\n}));\nconst slots=[\n{key:1,startTime:\"8:00\",endTime:\"10:00\"},\n{key:2,startTime:\"10:00\",endTime:\"12:00\"},\n{key:3,startTime:\"14:00\",endTime:\"16:00\"},\n{key:4,startTime:\"16:00\",endTime:\"18:00\"},\n\n];\n const SlotTime=({setTimeSelected,setTimeValue,seat,dateValue}) =>{\n  const classes = useStyles();\n  const [selected , setSelected] = useState(\"\");\n  const [todayReservation,seTodayReservation] = useState([]);\n\n  const [selectedIndex, setSelectedIndex] = useState(-1);\n\n  function handleChange(e,index){\n    setSelectedIndex(index);\n    setTimeSelected(true);\n    setTimeValue(index);\n  }\n  useEffect(async ()=>{\n    console.log(formatDate(dateValue));\n    await axios(\n      { \n        url:`${SERVER_URL}/api/seats/${seat}`,\n        Authorisation:authHeader,\n        method:\"post\",\n        data:{date:formatDate(dateValue)}\n    })\n    .then(response=>{\n        const reservations = response.data;\n        console.log(reservations);\n        seTodayReservation(reservations);        \n    })\n    .catch(error=>{\n        console.log(error);\n    });\n},[dateValue]);\n  return (\n    <List dense className={classes.root} >\n      {slots.map((slot) => {\n        const labelId = `chose a slot`;\n        return (\n          <ListItem key={slot.key} button\n          selected={selectedIndex === slot.key}\n          onClick={(e)=>handleChange(e,slot.key)}\n          disabled={todayReservation.filter(item=>item.time===slot.key).length>0?true:false}\n          >\n            <ListItemText id={slot.key} primary={`${slot.startTime}-${slot.endTime}`} align=\"center\"/>\n          </ListItem>\n        );\n      })}\n    </List>\n  );\n}\nexport default SlotTime;"]},"metadata":{},"sourceType":"module"}