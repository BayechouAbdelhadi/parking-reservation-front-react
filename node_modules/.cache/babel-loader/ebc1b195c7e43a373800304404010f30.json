{"ast":null,"code":"var _jsxFileName = \"/home/abdel/Desktop/parking-react-client/src/components/Map.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { MapContainer, useMapEvents, TileLayer, Marker, Popup, Polyline } from 'react-leaflet'; //import {useSelector,useDispatch} from 'react-redux';\n//import {endPart,showMarkers,incrementDifference} from '../actions/actions';\n//import {haversineDistance}from '../util/drawData.js';\n\nimport Calendar from './Calendar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst limeOptions = {\n  color: 'red'\n};\n/*\nfunction Markers(){\n\n    const endOfPart=useSelector(state=>state.endPart);\n    const markers=useSelector(state=>state.markers);\n    const city=useSelector(state=>state.city);\n    const [position1,setPosition1]=useState(null); \n    const [position2,setPosition2]=useState(null);\n    const dispatch =useDispatch();\n    const map = useMapEvents({\n        click(e) {\n            if(!endOfPart)\n            {\n                const cityLatLng=[city.data.lat,city.data.lng];\n                setPosition2(cityLatLng);\n                setPosition1(e.latlng)\n                map.flyTo(cityLatLng,6);\n                const end={lat:cityLatLng[0],lng:cityLatLng[1]}\n                const start={lat:e.latlng.lat,lng:e.latlng.lng}\n                const distance =haversineDistance(start,end);\n                dispatch(incrementDifference(distance));\n                dispatch(showMarkers());\n                dispatch(endPart());\n            }\n        },\n      });\n      useEffect(()=>{\n          if(!markers)\n            map.flyTo([47.0833, 2.4],5);\n\n\n      },[markers]);\n      return markers?position1 === null ? null : (\n        <>\n        <Marker position={position1}>\n          <Popup>Your decision</Popup>\n        </Marker>\n        <Marker position={position2}>\n        <Popup>The Right position</Popup>\n        <Polyline positions ={[position1,position2]} pathOptions={limeOptions}></Polyline>\n      </Marker>\n      </>\n      ):null;\n}\n*/\n\nconst Map = () => {\n  return /*#__PURE__*/_jsxDEV(MapContainer, {\n    center: [47.0833, 2.4],\n    zoom: 5,\n    scrollWheelZoom: false,\n    style: {\n      width: '880px',\n      height: '700px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n      attribution: \"\\xA9 <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Marker, {\n      position: [47.0833, 2.4],\n      children: /*#__PURE__*/_jsxDEV(Popup, {\n        style: {\n          height: \"400px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Calendar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Map;\nexport default Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["/home/abdel/Desktop/parking-react-client/src/components/Map.js"],"names":["React","useEffect","useState","MapContainer","useMapEvents","TileLayer","Marker","Popup","Polyline","Calendar","limeOptions","color","Map","width","height"],"mappings":";AAAA,OAAQA,KAAR,IAAgBC,SAAhB,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAASC,YAAT,EAAuBC,YAAvB,EAAoCC,SAApC,EAA+CC,MAA/C,EAAuDC,KAAvD,EAA8DC,QAA9D,QAA6E,eAA7E,C,CAEA;AACA;AACA;;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,MAAMC,WAAW,GAAG;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAApB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,GAAG,GAAC,MAAI;AACV,sBACI,QAAC,YAAD;AAAc,IAAA,MAAM,EAAE,CAAC,OAAD,EAAU,GAAV,CAAtB;AAAsC,IAAA,IAAI,EAAE,CAA5C;AACgB,IAAA,eAAe,EAAE,KADjC;AAEgB,IAAA,KAAK,EAAE;AAACC,MAAAA,KAAK,EAAE,OAAR;AAAiBC,MAAAA,MAAM,EAAE;AAAzB,KAFvB;AAAA,4BAII,QAAC,SAAD;AACI,MAAA,WAAW,EAAC,0EADhB;AAEI,MAAA,GAAG,EAAC;AAFR;AAAA;AAAA;AAAA;AAAA,YAJJ,eAUA,QAAC,MAAD;AAAQ,MAAA,QAAQ,EAAE,CAAC,OAAD,EAAU,GAAV,CAAlB;AAAA,6BACI,QAAC,KAAD;AAAO,QAAA,KAAK,EAAE;AAAEA,UAAAA,MAAM,EAAC;AAAT,SAAd;AAAA,+BACI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAVA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH,CAnBD;;KAAMF,G;AAoBN,eAAeA,GAAf","sourcesContent":["import  React,{ useEffect,useState }from \"react\";\nimport { MapContainer, useMapEvents,TileLayer, Marker, Popup ,Polyline} from 'react-leaflet';\n\n//import {useSelector,useDispatch} from 'react-redux';\n//import {endPart,showMarkers,incrementDifference} from '../actions/actions';\n//import {haversineDistance}from '../util/drawData.js';\nimport Calendar from './Calendar';\n\nconst limeOptions = { color: 'red' }\n\n/*\nfunction Markers(){\n\n    const endOfPart=useSelector(state=>state.endPart);\n    const markers=useSelector(state=>state.markers);\n    const city=useSelector(state=>state.city);\n    const [position1,setPosition1]=useState(null); \n    const [position2,setPosition2]=useState(null);\n    const dispatch =useDispatch();\n    const map = useMapEvents({\n        click(e) {\n            if(!endOfPart)\n            {\n                const cityLatLng=[city.data.lat,city.data.lng];\n                setPosition2(cityLatLng);\n                setPosition1(e.latlng)\n                map.flyTo(cityLatLng,6);\n                const end={lat:cityLatLng[0],lng:cityLatLng[1]}\n                const start={lat:e.latlng.lat,lng:e.latlng.lng}\n                const distance =haversineDistance(start,end);\n                dispatch(incrementDifference(distance));\n                dispatch(showMarkers());\n                dispatch(endPart());\n            }\n        },\n      });\n      useEffect(()=>{\n          if(!markers)\n            map.flyTo([47.0833, 2.4],5);\n\n\n      },[markers]);\n      return markers?position1 === null ? null : (\n        <>\n        <Marker position={position1}>\n          <Popup>Your decision</Popup>\n        </Marker>\n        <Marker position={position2}>\n        <Popup>The Right position</Popup>\n        <Polyline positions ={[position1,position2]} pathOptions={limeOptions}></Polyline>\n      </Marker>\n      </>\n      ):null;\n}\n*/\n\nconst Map=()=>{\n    return(\n        <MapContainer center={[47.0833, 2.4]} zoom={5} \n                        scrollWheelZoom={false} \n                        style={{width: '880px', height: '700px'}}\n        > \n            <TileLayer\n                attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n            />\n        {//<Markers/>\n        }\n        <Marker position={[47.0833, 2.4]}>\n            <Popup style={{ height:\"400px\"}}>\n                <Calendar/>\n            </Popup>\n        </Marker>\n        </MapContainer>\n    );\n}\nexport default Map;"]},"metadata":{},"sourceType":"module"}