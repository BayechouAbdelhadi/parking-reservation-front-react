{"ast":null,"code":"import axios from \"axios\";\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./types\";\nimport setJWTToken from \"../securityUtils/setJWTToken\";\nimport jwt_decode from \"jwt-decode\";\nimport SERVER_URL from '../securityUtils/path';\nexport const createNewUser = (newUser, history, setShoudDisableSignUp) => async (dispatch) => {\n  await axios({\n    url: `${SERVER_URL}/api/users/register`,\n    method: 'post',\n    headers: {\n      'Access-Control-Allow-Origin': '*'\n    },\n    data: newUser\n  }).then(response => {\n    setShoudDisableSignUp(false);\n    history.push(\"/\");\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  }).catch(error => {\n    setShoudDisableSignUp(false);\n    console.log(error);\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.response.data\n    });\n  });\n};\nexport const login = (LoginRequest, setShoudDisableSignIn) => async dispatch => {\n  try {\n    // post => Login Request\n    const res = await axios({\n      url: `${SERVER_URL}/api/users/login`,\n      method: 'post',\n      headers: {\n        'Access-Control-Allow-Origin': '*'\n      },\n      data: LoginRequest\n    }); // extract token from res.data\n\n    const {\n      token\n    } = res.data; // store the token in the localStorage\n\n    localStorage.setItem(\"jwtToken\", token); // set our token in header ***\n\n    setJWTToken(token); // decode token on React\n\n    const decoded = jwt_decode(token); // dispatch to our securityReducer\n\n    setShoudDisableSignIn(false);\n    dispatch({\n      type: SET_CURRENT_USER,\n      payload: decoded\n    });\n  } catch (err) {\n    setShoudDisableSignIn(false);\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\nexport const logout = () => dispatch => {\n  localStorage.removeItem(\"jwtToken\");\n  setJWTToken(false);\n  dispatch({\n    type: SET_CURRENT_USER,\n    payload: {}\n  });\n};","map":{"version":3,"sources":["/home/abdel/Desktop/parking-reservation-front-react/src/actions/securityActions.js"],"names":["axios","GET_ERRORS","SET_CURRENT_USER","setJWTToken","jwt_decode","SERVER_URL","createNewUser","newUser","history","setShoudDisableSignUp","dispatch","url","method","headers","data","then","response","push","type","payload","catch","error","console","log","login","LoginRequest","setShoudDisableSignIn","res","token","localStorage","setItem","decoded","err","logout","removeItem"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,gBAArB,QAA6C,SAA7C;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,UAAP,MAAwB,uBAAxB;AAEA,OAAO,MAAMC,aAAa,GAAG,CAACC,OAAD,EAAUC,OAAV,EAAkBC,qBAAlB,KAA4C,OAAMC,QAAN,KACzE;AAEI,QAAMV,KAAK,CAAC;AACVW,IAAAA,GAAG,EAAE,GAAEN,UAAW,qBADR;AAEVO,IAAAA,MAAM,EAAC,MAFG;AAGVC,IAAAA,OAAO,EAAE;AAAC,qCAA+B;AAAhC,KAHC;AAIVC,IAAAA,IAAI,EAAEP;AAJI,GAAD,CAAL,CAKLQ,IALK,CAKAC,QAAQ,IAAE;AACdP,IAAAA,qBAAqB,CAAC,KAAD,CAArB;AACAD,IAAAA,OAAO,CAACS,IAAR,CAAa,GAAb;AACAP,IAAAA,QAAQ,CACR;AACEQ,MAAAA,IAAI,EAAEjB,UADR;AAEEkB,MAAAA,OAAO,EAAE;AAFX,KADQ,CAAR;AAKD,GAbK,EAaHC,KAbG,CAaGC,KAAK,IAAE;AACdZ,IAAAA,qBAAqB,CAAC,KAAD,CAArB;AACAa,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAX,IAAAA,QAAQ,CACR;AACEQ,MAAAA,IAAI,EAAEjB,UADR;AAEEkB,MAAAA,OAAO,EAAEE,KAAK,CAACL,QAAN,CAAeF;AAF1B,KADQ,CAAR;AAKD,GArBK,CAAN;AAsBH,CAzBM;AA2BP,OAAO,MAAMU,KAAK,GAAG,CAACC,YAAD,EAAcC,qBAAd,KAAwC,MAAMhB,QAAN,IAAkB;AAC7E,MAAI;AACF;AACA,UAAMiB,GAAG,GAAG,MAAM3B,KAAK,CAAC;AACtBW,MAAAA,GAAG,EAAE,GAAEN,UAAW,kBADI;AAEtBO,MAAAA,MAAM,EAAC,MAFe;AAGtBC,MAAAA,OAAO,EAAE;AAAC,uCAA+B;AAAhC,OAHa;AAItBC,MAAAA,IAAI,EAAEW;AAJgB,KAAD,CAAvB,CAFE,CAQF;;AACA,UAAM;AAAEG,MAAAA;AAAF,QAAYD,GAAG,CAACb,IAAtB,CATE,CAUF;;AACAe,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCF,KAAjC,EAXE,CAYF;;AACAzB,IAAAA,WAAW,CAACyB,KAAD,CAAX,CAbE,CAcF;;AACA,UAAMG,OAAO,GAAG3B,UAAU,CAACwB,KAAD,CAA1B,CAfE,CAgBF;;AACAF,IAAAA,qBAAqB,CAAC,KAAD,CAArB;AACAhB,IAAAA,QAAQ,CAAC;AACPQ,MAAAA,IAAI,EAAChB,gBADE;AAEPiB,MAAAA,OAAO,EAAEY;AAFF,KAAD,CAAR;AAID,GAtBD,CAsBE,OAAOC,GAAP,EACF;AAAEN,IAAAA,qBAAqB,CAAC,KAAD,CAArB;AACAhB,IAAAA,QAAQ,CACR;AACEQ,MAAAA,IAAI,EAAEjB,UADR;AAEEkB,MAAAA,OAAO,EAAEa,GAAG,CAAChB,QAAJ,CAAaF;AAFxB,KADQ,CAAR;AAKD;AACF,CA/BM;AAiCP,OAAO,MAAMmB,MAAM,GAAG,MAAMvB,QAAQ,IAAI;AACtCmB,EAAAA,YAAY,CAACK,UAAb,CAAwB,UAAxB;AACA/B,EAAAA,WAAW,CAAC,KAAD,CAAX;AACAO,EAAAA,QAAQ,CAAC;AACPQ,IAAAA,IAAI,EAAChB,gBADE;AAEPiB,IAAAA,OAAO,EAAE;AAFF,GAAD,CAAR;AAID,CAPM","sourcesContent":["import axios from \"axios\";\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./types\";\nimport setJWTToken from \"../securityUtils/setJWTToken\";\nimport jwt_decode from \"jwt-decode\";\nimport SERVER_URL from  '../securityUtils/path';\n\nexport const createNewUser = (newUser, history,setShoudDisableSignUp) => async dispatch => \n{\n  \n    await axios({\n      url:`${SERVER_URL}/api/users/register`,\n      method:'post',\n      headers: {'Access-Control-Allow-Origin': '*'},\n      data: newUser})\n    .then(response=>{\n      setShoudDisableSignUp(false);\n      history.push(\"/\");\n      dispatch(\n      {\n        type: GET_ERRORS,\n        payload: {}\n      });\n    }).catch(error=>{\n      setShoudDisableSignUp(false);\n      console.log(error);\n      dispatch(\n      {\n        type: GET_ERRORS,\n        payload: error.response.data\n      });\n    });\n};\n\nexport const login = (LoginRequest,setShoudDisableSignIn) => async dispatch => {\n  try {\n    // post => Login Request\n    const res = await axios({\n      url:`${SERVER_URL}/api/users/login`,\n      method:'post',\n      headers: {'Access-Control-Allow-Origin': '*'},\n      data: LoginRequest}\n      );\n    // extract token from res.data\n    const { token } = res.data;\n    // store the token in the localStorage\n    localStorage.setItem(\"jwtToken\", token);\n    // set our token in header ***\n    setJWTToken(token);\n    // decode token on React\n    const decoded = jwt_decode(token);\n    // dispatch to our securityReducer\n    setShoudDisableSignIn(false);\n    dispatch({\n      type:SET_CURRENT_USER ,\n      payload: decoded\n    });\n  } catch (err) \n  { setShoudDisableSignIn(false);\n    dispatch(\n    {\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const logout = () => dispatch => {\n  localStorage.removeItem(\"jwtToken\");\n  setJWTToken(false);\n  dispatch({\n    type:SET_CURRENT_USER ,\n    payload: {}\n  });\n};\n"]},"metadata":{},"sourceType":"module"}